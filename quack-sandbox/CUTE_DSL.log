2025-09-04 14:06:09,737 - CUTE_DSL - INFO - [__init__] - `cute.compile` CompileOptions: options=
2025-09-04 14:06:09,737 - CUTE_DSL - INFO - [__init__] - Initializing CUTE_DSL DSL
2025-09-04 14:06:09,738 - CUTE_DSL - DEBUG - [__init__] - Logger initialized for CUTE_DSL
2025-09-04 14:06:09,738 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,738 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,739 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,739 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,741 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,741 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,741 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,741 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,744 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,745 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,790 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,790 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,790 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,790 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:09,790 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:10,065 - CUTE_DSL - INFO - [__init__] - `cute.compile` CompileOptions: options=
2025-09-04 14:06:10,066 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [__call__]
2025-09-04 14:06:10,066 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [__call__]
2025-09-04 14:06:10,072 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 14:06:10,073 - CUTE_DSL - INFO - [mangle_name] - Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 14:06:10,073 - CUTE_DSL - DEBUG - [_func] - Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [0] Argument [self : None]
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [generate_mlir_function_types] - Execution Arguments: 913660656, 913678384, 913679952, 126685048496736
2025-09-04 14:06:10,074 - CUTE_DSL - DEBUG - [generate_mlir_function_types] - Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 14:06:10,075 - CUTE_DSL - DEBUG - [build_ir_module] - Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 14:06:10,075 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [0] Argument [self : None]
2025-09-04 14:06:10,075 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,076 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,076 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,076 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:06:10,076 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 14:06:10,076 - CUTE_DSL - DEBUG - [generate_execution_arguments] - execution args: <__main__.CrossEntropy object at 0x733829542030>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 14:06:10,076 - CUTE_DSL - DEBUG - [generate_execution_arguments] - execution kwargs: 
2025-09-04 14:06:10,077 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [kernel]
2025-09-04 14:06:10,079 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [kernel]
2025-09-04 14:06:10,089 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 14:06:10,090 - CUTE_DSL - INFO - [mangle_name] - Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [generate_kernel_operands_and_types] - Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [0] Argument [self : None]
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [_generate_jit_func_args] - Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [generate_kernel_operands_and_types] - Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [generate_kernel_operands_and_types] - Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [generate_kernel_operands_and_types] - Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [kernel_wrapper] - Generating device kernel
2025-09-04 14:06:10,091 - CUTE_DSL - DEBUG - [generate_func_op] - [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [kernel_wrapper] - Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [0] Argument [self : None]
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 14:06:10,092 - CUTE_DSL - DEBUG - [gen_exec_args] - Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 14:06:10,093 - CUTE_DSL - DEBUG - [generate_execution_arguments] - execution args: <__main__.CrossEntropy object at 0x733829542030>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 14:06:10,093 - CUTE_DSL - DEBUG - [generate_execution_arguments] - execution kwargs: 
2025-09-04 14:06:10,093 - CUTE_DSL - DEBUG - [kernel_wrapper] - IR arguments - args: [<__main__.CrossEntropy object at 0x733829542030>, <cutlass.cute.core._Tensor object at 0x7338295cd0a0>, <cutlass.cute.core._Tensor object at 0x7338295cd010>, <cutlass.cute.core._Tensor object at 0x7338295cce30>, None, <cutlass.cute.core._Layout object at 0x733829548bf0>, (16, 64)] ; kwargs: {}
2025-09-04 14:06:10,097 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [_initialize_cluster]
2025-09-04 14:06:10,098 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 14:06:10,143 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 14:06:10,145 - CUTE_DSL - DEBUG - [if_selector] - pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x7338295cf770>, <cutlass.cute.core._Tensor object at 0x7338295cd010>]] yield_args [[0]]
2025-09-04 14:06:10,146 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (1)
2025-09-04 14:06:10,146 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 14:06:10,146 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,146 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:06:10,147 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:06:10,147 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,147 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: initial-class-types: 0
2025-09-04 14:06:10,147 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,147 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (1)
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: obj-types: <class 'int'>
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: packed: ?
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,148 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (1)
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: will-unpacked: [type:Int32] ?
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: initial-class-types: ?
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (1)
2025-09-04 14:06:10,149 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: obj-types: <class 'int'>
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: packed: ?
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (1)
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: will-unpacked: [type:Int32] ?
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:06:10,150 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:06:10,151 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,151 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: initial-class-types: ?
2025-09-04 14:06:10,151 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,151 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 14:06:10,151 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (1)
2025-09-04 14:06:10,151 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 14:06:10,152 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,152 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: obj-types: <class 'int'>
2025-09-04 14:06:10,152 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,152 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: packed: ?
2025-09-04 14:06:10,152 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,152 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [predicate_k]
2025-09-04 14:06:10,153 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [predicate_k]
2025-09-04 14:06:10,156 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 14:06:10,158 - CUTE_DSL - DEBUG - [if_selector] - pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x7338295cd8e0>, <cutlass.cute.core._Tensor object at 0x7338295439e0>, <cutlass.cute.core._Tensor object at 0x733829542840>, <cutlass.cute.core._Tensor object at 0x7338295b8a70>]] yield_args [[]]
2025-09-04 14:06:10,158 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,158 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,158 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,158 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 14:06:10,159 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (0)
2025-09-04 14:06:10,159 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,159 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,159 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,159 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,159 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,159 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 14:06:10,160 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (0)
2025-09-04 14:06:10,160 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,160 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,160 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [fill_oob]
2025-09-04 14:06:10,160 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [fill_oob]
2025-09-04 14:06:10,164 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 14:06:10,165 - CUTE_DSL - DEBUG - [if_selector] - pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x7338295b8a70>, 0, 0, <cutlass.cute.core._Tensor object at 0x7338295cd820>, <cutlass.cute.core._Tensor object at 0x733829542840>]] yield_args [[]]
2025-09-04 14:06:10,165 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,165 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,165 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,165 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 14:06:10,166 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (0)
2025-09-04 14:06:10,166 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,166 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,167 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,167 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,167 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,167 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 14:06:10,168 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (0)
2025-09-04 14:06:10,168 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,168 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,170 - CUTE_DSL - DEBUG - [if_selector] - pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x7338295cf770>, <cutlass.cute.core._Tensor object at 0x7338295cd0a0>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x733829543350>, 0.0]]
2025-09-04 14:06:10,171 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (2)
2025-09-04 14:06:10,171 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,172 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 14:06:10,172 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,172 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:06:10,172 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:06:10,173 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:06:10,173 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:06:10,174 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,174 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: indices: (1, 1)
2025-09-04 14:06:10,174 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,174 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: initial-class-types: 0.0
2025-09-04 14:06:10,174 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,174 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 14:06:10,175 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (2)
2025-09-04 14:06:10,175 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x733828b5b970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x733828b5b970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: indices: (1, 1)
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: obj-types: <class 'float'>
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: packed: ?
2025-09-04 14:06:10,176 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,178 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (2)
2025-09-04 14:06:10,178 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,178 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: will-unpacked: [type:Float32] ?
2025-09-04 14:06:10,178 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,178 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:06:10,179 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 14:06:10,179 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:06:10,180 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 14:06:10,181 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,181 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: indices: (1, 1)
2025-09-04 14:06:10,181 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,181 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: initial-class-types: ?
2025-09-04 14:06:10,181 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,181 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (2)
2025-09-04 14:06:10,181 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x733828b5b970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:06:10,182 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x733828b5b970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:06:10,182 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,182 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: indices: (1, 1)
2025-09-04 14:06:10,182 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 14:06:10,182 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: obj-types: <class 'float'>
2025-09-04 14:06:10,182 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,182 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,183 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: packed: ?
2025-09-04 14:06:10,183 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,183 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (2)
2025-09-04 14:06:10,183 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,183 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: will-unpacked: [type:Float32] ?
2025-09-04 14:06:10,183 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,183 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:06:10,184 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:06:10,184 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:06:10,185 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:06:10,185 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,185 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: indices: (1, 1)
2025-09-04 14:06:10,185 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,186 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - [1]: initial-class-types: ?
2025-09-04 14:06:10,186 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,186 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 14:06:10,187 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (2)
2025-09-04 14:06:10,187 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x73382b31f290>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 14:06:10,188 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x73382b31f290>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 14:06:10,188 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: indices: (0, 1)
2025-09-04 14:06:10,188 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: indices: (1, 1)
2025-09-04 14:06:10,188 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 14:06:10,188 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: obj-types: <class 'float'>
2025-09-04 14:06:10,188 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,188 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:06:10,189 - CUTE_DSL - DEBUG - [pack_from_irvalue] - [1]: packed: ?
2025-09-04 14:06:10,189 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,189 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [online_softmax_reduce]
2025-09-04 14:06:10,191 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 14:06:10,197 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 14:06:10,197 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [warp_reduce]
2025-09-04 14:06:10,198 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 14:06:10,200 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 14:06:10,202 - CUTE_DSL - INFO - [run_preprocessor] - Started preprocessing [exp2f]
2025-09-04 14:06:10,202 - CUTE_DSL - INFO - [transform_function] - ASTPreprocessor Transforming function [exp2f]
2025-09-04 14:06:10,206 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [loop_selector] - start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x7338295ba3f0>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [for_execute] - start [0] stop [8] step [1]
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [create_for_op] - Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [create_for_op] - Pipelining attribute: None
2025-09-04 14:06:10,207 - CUTE_DSL - DEBUG - [create_for_op] - Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 14:06:10,209 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 14:06:10,210 - CUTE_DSL - DEBUG - [for_body_builder] - For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x7338295ba3f0>]
2025-09-04 14:06:10,211 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,211 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,211 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,211 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 14:06:10,211 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (0)
2025-09-04 14:06:10,211 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,211 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,214 - CUTE_DSL - INFO - [exec] - ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 14:06:10,220 - CUTE_DSL - DEBUG - [if_selector] - pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x7338295cf770>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x733829542030>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x7338295cce30>, None]] yield_args [[]]
2025-09-04 14:06:10,222 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,222 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,222 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,222 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 14:06:10,222 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (0)
2025-09-04 14:06:10,222 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,222 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,223 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ===--- Values UNPack (0)
2025-09-04 14:06:10,223 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,223 - CUTE_DSL - DEBUG - [unpack_to_irvalue] - ------------------ 
2025-09-04 14:06:10,223 - CUTE_DSL - DEBUG - [scf_execute_dynamic] - Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 14:06:10,224 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ===--- Values Pack (0)
2025-09-04 14:06:10,224 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,224 - CUTE_DSL - DEBUG - [pack_from_irvalue] - ------------------ 
2025-09-04 14:06:10,224 - CUTE_DSL - DEBUG - [kernel_wrapper] - Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x733828be8df0>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 14:06:10,230 - CUTE_DSL - INFO - [jit_runner] - jit_runner
2025-09-04 14:06:10,342 - CUTE_DSL - DEBUG - [get_module_hash] - Bytecode=[]
2025-09-04 14:06:10,342 - CUTE_DSL - DEBUG - [get_module_hash] - Version=[9215f06af1d2437ad53c13e33ea4250e2aa61c700d763bf16b550dccdc6bc8fd]
2025-09-04 14:06:10,342 - CUTE_DSL - INFO - [get_module_hash] - Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[7857cff4b3c43387448cd8068e6216741c7ce8f3a7c833deb588949ea856c6a3]
2025-09-04 14:06:10,347 - CUTE_DSL - DEBUG - [save_ir] - Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 14:06:10,348 - CUTE_DSL - DEBUG - [preprocess_pipeline] - Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 14:06:10,348 - CUTE_DSL - INFO - [compile_and_cache] - JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[7857cff4b3c43387448cd8068e6216741c7ce8f3a7c833deb588949ea856c6a3]
2025-09-04 14:06:10,399 - CUTE_DSL - DEBUG - [update_jit_cuda_modules] - Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 14:06:10,404 - CUTE_DSL - INFO - [load_cubin_module_data] - cuModuleLoadData 915214464
2025-09-04 14:06:10,404 - CUTE_DSL - INFO - [get_kernel_function] - cuModuleGetFunction <CUmodule 0x368ef6e0> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 14:06:10,404 - CUTE_DSL - INFO - [get_kernel_function] - <CUfunction 0x368c7230> <-- cuModuleGetFunction
2025-09-04 14:06:10,404 - CUTE_DSL - INFO - [__init__] - `cute.compile` CompileOptions: options=
2025-09-04 14:06:10,405 - CUTE_DSL - INFO - [dump_cache_to_path] - JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 14:06:10,406 - CUTE_DSL - DEBUG - [save_ir] - Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 14:18:22,132:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 14:18:22,132:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: Initializing CUTE_DSL DSL
2025-09-04 14:18:22,132:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [__init__]: Logger initialized for CUTE_DSL
2025-09-04 14:18:22,132:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,132:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,134:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,134:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,136:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,136:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,136:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,137:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,138:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,138:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,138:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,138:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,138:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,139:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,140:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,140:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,140:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,140:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,230:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,230:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,230:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,230:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,230:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,510:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 14:18:22,510:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 14:18:22,511:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 14:18:22,517:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 14:18:22,518:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 14:18:22,518:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_mlir_function_types]: Execution Arguments: 750495392, 750513120, 750514688, 136284221386784
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 14:18:22,519:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 14:18:22,520:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 14:18:22,520:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,520:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,521:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,521:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:18:22,521:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 14:18:22,521:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x7bf3249f59d0>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 14:18:22,521:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution kwargs: 
2025-09-04 14:18:22,522:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 14:18:22,524:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 14:18:22,535:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 14:18:22,536:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 14:18:22,536:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: Generating device kernel
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 14:18:22,537:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 14:18:22,538:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 14:18:22,538:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 14:18:22,538:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x7bf3249f59d0>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 14:18:22,538:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution kwargs: 
2025-09-04 14:18:22,538:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x7bf3249f59d0>, <cutlass.cute.core._Tensor object at 0x7bf3249f7470>, <cutlass.cute.core._Tensor object at 0x7bf323f78710>, <cutlass.cute.core._Tensor object at 0x7bf323f786e0>, None, <cutlass.cute.core._Layout object at 0x7bf3249d27b0>, (16, 64)] ; kwargs: {}
2025-09-04 14:18:22,543:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 14:18:22,544:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 14:18:22,546:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 14:18:22,548:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x7bf323f7b830>, <cutlass.cute.core._Tensor object at 0x7bf323f78710>]] yield_args [[0]]
2025-09-04 14:18:22,549:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 14:18:22,549:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 14:18:22,549:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,549:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:18:22,549:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:18:22,549:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: ?
2025-09-04 14:18:22,550:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,551:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 14:18:22,551:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 14:18:22,551:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,551:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 14:18:22,551:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: ?
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,552:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:18:22,553:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 14:18:22,553:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,553:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 14:18:22,553:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,553:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 14:18:22,553:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 14:18:22,553:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 14:18:22,554:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,554:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 14:18:22,554:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,554:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: ?
2025-09-04 14:18:22,554:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,554:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 14:18:22,555:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 14:18:22,559:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 14:18:22,560:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x7bf323f7adb0>, <cutlass.cute.core._Tensor object at 0x7bf323f7aab0>, <cutlass.cute.core._Tensor object at 0x7bf323f7ac00>, <cutlass.cute.core._Tensor object at 0x7bf323fdd160>]] yield_args [[]]
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,561:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 14:18:22,562:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 14:18:22,562:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,562:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,562:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 14:18:22,562:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 14:18:22,566:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 14:18:22,567:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x7bf323fdd160>, 0, 0, <cutlass.cute.core._Tensor object at 0x7bf3249f69c0>, <cutlass.cute.core._Tensor object at 0x7bf323f7ac00>]] yield_args [[]]
2025-09-04 14:18:22,567:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,567:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,567:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,567:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 14:18:22,568:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 14:18:22,568:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,568:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,569:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,569:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,569:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,569:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 14:18:22,570:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 14:18:22,570:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,570:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,572:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x7bf323f7b830>, <cutlass.cute.core._Tensor object at 0x7bf3249f7470>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x7bf3249f6390>, 0.0]]
2025-09-04 14:18:22,573:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 14:18:22,573:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,574:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 14:18:22,574:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,574:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:18:22,574:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:18:22,575:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:18:22,576:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:18:22,576:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,576:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 14:18:22,576:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,576:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 14:18:22,576:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,577:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 14:18:22,577:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 14:18:22,577:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7bf323579830>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:18:22,578:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7bf323579830>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:18:22,578:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,578:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 14:18:22,578:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 14:18:22,578:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 14:18:22,578:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,578:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,579:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: packed: ?
2025-09-04 14:18:22,579:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,580:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 14:18:22,580:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,580:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 14:18:22,580:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,580:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:18:22,581:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 14:18:22,582:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:18:22,582:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 14:18:22,583:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,583:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 14:18:22,583:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,583:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 14:18:22,583:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,583:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 14:18:22,583:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7bf323579830>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:18:22,584:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7bf323579830>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: packed: ?
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,585:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:18:22,586:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:18:22,586:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 14:18:22,587:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 14:18:22,587:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,587:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 14:18:22,587:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,588:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 14:18:22,588:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,588:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 14:18:22,589:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 14:18:22,589:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x7bf323f7b6e0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 14:18:22,590:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x7bf323f7b6e0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 14:18:22,590:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 14:18:22,590:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 14:18:22,590:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 14:18:22,590:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 14:18:22,590:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,590:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 14:18:22,591:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: packed: ?
2025-09-04 14:18:22,591:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,591:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 14:18:22,593:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 14:18:22,599:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 14:18:22,599:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 14:18:22,600:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 14:18:22,602:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 14:18:22,604:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 14:18:22,604:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 14:18:22,608:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x7bf323fde630>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [for_execute]: start [0] stop [8] step [1]
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [create_for_op]: Pipelining attribute: None
2025-09-04 14:18:22,609:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 14:18:22,611:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 14:18:22,612:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x7bf323fde630>]
2025-09-04 14:18:22,613:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,613:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,613:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,613:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 14:18:22,613:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 14:18:22,613:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,613:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,616:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 14:18:22,621:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x7bf323f7b830>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x7bf3249f59d0>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x7bf323f786e0>, None]] yield_args [[]]
2025-09-04 14:18:22,622:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,622:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,622:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,622:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 14:18:22,623:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 14:18:22,623:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,623:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,623:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 14:18:22,624:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,624:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 14:18:22,624:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 14:18:22,624:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 14:18:22,624:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,624:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 14:18:22,625:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7bf32350bcf0>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 14:18:22,630:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 14:18:22,738:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [get_module_hash]: Bytecode=[4d4cef520d4d4c495232302e302e3067697400014202170105090d1115191d212529a501032f03052f3305050b3707593b3f43474b4f53575b5f63676b6f73777b7f83878b8f93979b9fa3a7abafb3b7bbbfc3c7cbcfd3d7dbdfe3e7091debeff3f7fbff06020e0216021e0226022e0236023e020b1546024e0256025e0266026e0276027e0286028e020d0596029e020f03a6021107ae02b602be021305c602ce021503d60203a2055e03ef01fb070b170b0b131317130f0f13070b0f17131313131f0f0b0b130f0f0f0b0f0b130f0b13170f230b0f0f0b0f0f13130b0f130b13130b0b0f0b0f0f0f0f0f130b0f131313130b1313130b0b1313231313130f0f1f0b171717130b130b0b0b131313130b130f1313130b230b0b0b431b0b0b0f131313130f1717171313130b090559590b035901a91317171713130b1317171313130b131717171717131717171317131717331723171713171713171317131717170b17170f0f171713170f1f0b170b1313130f1b0b1313170b1f0b170b130f0f170f17170f170f1713055d491503b901170f070b0f13070b07131f1f03034507d3554545817149457949554d59a1855d8585516d4545b155d555614d515d6179cd8d8d55555d61894dcd91cd5d815d7d71515551858d5502027d5dbd8145494d7dc16555d955e58575657d61e16d6da1597d0202692a05fdfd6dd9fd61d56d61496dbd455df1f9916545556d550d05b5f90252461f05b71de202e60205b905bb1d915e021d07ca021d36033a03230101011107011107051d914e020f05bd1107091db602ba021d43f2021d3d0a021d2f7a021d2f92021101d0ffffff3f11017d05bf05c11d63ae021d6bbb1d4dc11dc3c503011d53ef05c31d3d0e0211010505c51d070e031d220326031d6bbd230103090000000005c71d07e51d07e705c91d07f31d07f51d0706021d892e0205cb1101011d2f860205cd1d43ee021d43f60205cf05d11d4dbf05d31d07e91107411d53ed1107211d53f11d7d120205d51107251d7d1e021d3d22021d3d26021d892a0205d71d0742021d0746021d074a0205d90d0f1d075a021d07720223010309020000001d2f82021d63be021d07ce021101091101111303d08e2aee0f05db1d1a031e031d2e0332031d4a034e030303b11905dd0303b51905df0d1305e1172d5501172d5b011703b5011703bb0105e3172d7101110b05110b0204110142410b6903cf096f0307d319d519d7d905e505e705e9230107198000000001000000010000000109393939390d1505eb1d4de31703b9011703dd011703df011703ed011101411709a6040117099e04011709b604011703f5011703f7011df9020205ed2361726974682e6f766572666c6f773c6e6f6e653e002361726974682e666173746d6174683c6e6f6e653e00236e76766d3c7368666c5f6b696e642062666c793e00171b53011703020201171b7a0201171bb20201171baf011101024005ef171bad01171bce0201171bd20201172d7d01172d81011101024105f11d073e0217031a02011703320201170336020117033a0201175d4a15011d07560217033e02011703460201175d5215011d07660217035202011d076e0217035a020117036e02012301051100000000010000001709960301230103090100000017099a030117099203011d2f8e0217098e03011709b203011d079a0217038602011d07a20217038a02011d63aa021709e603011709ea030125110580ff05f3175db619011709fa0301110d0011050017039a020117039e02011d07d6021703aa02011303011303100000e03f05f517ea02390105f71709cf011709d1011709d301110121030302035a0305f91d430a031709d701170356030105fb130310865ccc0f05fd170372030105ff1709d5010502020506021703b60201050a021709fe03011d42034603050e02170382020105120217035e020123766563746f722e6b696e643c6d6178696d756d663e0023766563746f722e6b696e643c6164643e00236c6c766d2e6c6f6f705f616e6e6f746174696f6e3c756e726f6c6c203d203c66756c6c203d20747275653e3e000102020b010901020427032103030141072703210f050947595b1701050947595b6d01216770752e6173796e632e746f6b656e0021637574652e696e745f7475706c653c223f223e0021637574652e73686170653c2231223e0021637574652e73686170653c2238223e0021637574652e696e745f7475706c653c22283f2c3f7b6469763d387d29223e0021637574652e696e745f7475706c653c223f7b6469763d387d223e0021637574652e7374726964653c2231223e0021637574652e73686170653c223f223e0021637574652e6c61796f75743c22283f2c3136293a2831362c3129223e0021637574652e73686170653c223136223e0021637574652e696e745f7475706c653c2238223e0021637574652e7374726964653c223136223e0021637574652e73686170653c22283f2c313629223e0021637574652e6c61796f75743c222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e7074723c626631362c20676d656d2c20616c69676e3c31363e3e0021637574652e7374726964653c222831362c3129223e0021637574652e7074723c626631362c20726d656d2c20616c69676e3c31363e3e0021637574652e7074723c626631362c20736d656d2c20616c69676e3c31363e3e0021637574652e6c61796f75743c22383a31223e0021637574652e73686170653c222828382c31292c312c3129223e0021637574652e636f6f72643c2230223e0021637574652e636f6f72643c223f223e0021637574652e636f6f72645f74656e736f723c22283f2c3f7b6469763d387d29222c202228293a2829223e0021637574652e696e745f7475706c653c2231223e0021637574652e6d656d7265663c626631362c20676d656d2c20616c69676e3c31363e2c2022283f2c3136293a2831362c3129223e0021637574652e696e745f7475706c653c2230223e0021637574652e6c61796f75743c22283f293a283129223e0021637574652e73686170653c22283f29223e0021637574652e7374726964653c22283129223e0021637574652e696e745f7475706c653c22313238223e0021637574652e6c61796f75743c222838293a283129223e0021637574652e73686170653c222828382c3136292c28382c312929223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c31363e2c202228382c31293a28312c3029223e0021637574652e6d656d7265663c6936342c20676d656d2c2022283f293a283129223e0021637574652e6d656d7265663c6633322c20676d656d2c2022283f293a283129223e0021637574652e7074723c6936342c20676d656d3e0021637574652e7074723c6633322c20676d656d3e0021637574652e73686170653c222831362c363429223e0021637574652e696e745f7475706c653c2231303234223e0021637574652e7074723c6936342c20736d656d2c20616c69676e3c313032343e3e0021637574652e73686170653c22283829223e0021637574652e6d656d7265663c626631362c20726d656d2c20616c69676e3c31363e2c202228382c31293a28312c3029223e0021637574652e7374726964653c2228283132382c31292c2831362c313032342929223e0021637574652e6c61796f75743c222828382c3136292c28382c3129293a28283132382c31292c2831362c313032342929223e0021637574652e73686170653c2228312c312c3129223e0021637574652e6c61796f75743c2228312c312c31293a28312c302c3129223e0021637574652e696e745f7475706c653c22283829223e0021637574652e696e745f7475706c653c222828382c31292c312c3129223e0021637574652e6c61796f75743c2228382c31293a28312c3029223e0021637574652e7374726964653c22313238223e0021637574652e7374726964653c2231303234223e0021637574652e6936343c64697662792031363e0021637574652e7074723c69382c20736d656d2c20616c69676e3c313032343e3e0021637574652e7074723c626631362c20736d656d2c20616c69676e3c313032343e3e0021637574652e696e745f7475706c653c2234223e0021637574652e636f6f72645f74656e736f723c22283f2c3f7b6469763d387d29222c20222828382c31292c312c31293a28283140312c30292c302c3029223e0021637574652e7074723c69382c20726d656d2c20616c69676e3c33323e3e0021637574652e636f6f72643c2228302c302c3029223e0021637574652e6d656d7265663c626631362c20726d656d2c20616c69676e3c31363e2c20222838293a283129223e0021637574652e7074723c6633322c20726d656d2c20616c69676e3c33323e3e0021637574652e73686170653c2232223e0021637574652e74696c653c22383a31223e0021637574652e74696c653c2231363a31223e0021637574652e6c61796f75743c222831362c3634293a28312c313629223e0021637574652e636f6f72645f74656e736f723c2228302c3029222c2022283f2c3136293a283140302c31403129223e0021637574652e696e745f7475706c653c2228302c3029223e0021637574652e636f6f72643c2228302c3029223e0021637574652e6d656d7265663c626631362c20676d656d2c20616c69676e3c31363e2c20222831362c3634293a2831362c3129223e0021637574652e636f6f72643c22283f2c3029223e0021637574652e636f6f72645f74656e736f723c22283f7b6469763d31367d2c3029222c20222831362c3634293a283140302c31403129223e0021637574652e696e745f7475706c653c22283f7b6469763d31367d2c3029223e0021637574652e696e745f7475706c653c223f7b6469763d31367d223e0021637574652e696e745f7475706c653c2228312c3029223e0021637574652e6c61796f75743c222831362c3634293a2836342c3129223e0021637574652e696e745f7475706c653c2232303438223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c313032343e2c20222831362c3634293a2836342c3129223e0021637574652e73686170653c2228342c28312c31292c3129223e0021637574652e696e745f7475706c653c2228312c302c3229223e0021637574652e6c61796f75743c2228342c28312c31292c31293a28312c28302c30292c3029223e0021637574652e696e745f7475706c653c223332223e0021637574652e7074723c69382c20736d656d2c20616c69676e3c33323e3e0021637574652e6d656d7265663c6936342c20736d656d2c20616c69676e3c313032343e2c202228342c28312c31292c31293a28312c28302c30292c3029223e0021637574652e74696c653c225b31363a313b36343a315d223e0021637574652e74696c65645f636f70793c21637574655f6e766770752e61746f6d2e73696d745f6173796e635f636f70793c626631362c206361636865203d20616c776179732c2031323820623e2c206c61796f75745f636f70795f7476203d203c222828382c3136292c28382c3129293a28283132382c31292c2831362c313032342929223e2c2074696c65725f6d6e203d203c225b31363a313b36343a315d223e3e0021637574652e6d656d7265663c626631362c20676d656d2c20616c69676e3c31363e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c31363e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e636f6f72643c222828302c5f292c5f2c5f29223e0021637574652e636f6f72645f74656e736f723c22283f2c3f7b6469763d387d29222c202228312c312c31293a28302c302c3029223e0021637574652e6d656d7265663c626631362c20726d656d2c20616c69676e3c31363e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e7374726964653c2228312c302c3129223e0021637574652e6d656d7265663c69382c20726d656d2c20616c69676e3c33323e2c202228312c312c31293a28312c302c3129223e0021637574652e636f6f72643c222828302c30292c302c3029223e0021637574652e636f6f72643c223f7b6469763d387d223e0021637574652e636f6f72643c223136223e0021637574652e636f6f72643c2228285f2c30292c302c3029223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c31363e2c20222838293a283129223e0021637574652e636f6f72643c225f223e0021637574652e636f6f72643c22285f2c5f2c3029223e0021637574652e6d656d7265663c6936342c20736d656d2c20616c69676e3c313032343e2c202228342c28312c3129293a28312c28302c302929223e0021637574652e6d656d7265663c6633322c20726d656d2c20616c69676e3c33323e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e6c61796f75743c2228342c28312c3129293a28312c28302c302929223e0021637574652e73686170653c2228342c28312c312929223e0021637574652e73686170653c2234223e0021637574652e636f6f72643c2228302c3f29223e0021637574652e636f6f72643c2228285f2c30292c5f2c3029223e0021637574652e73686170653c2228382c3129223e0021637574655f6e766770752e61746f6d2e756e6976657273616c5f636f70793c626631362c2031323820623e0021637574655f6e766770752e61746f6d2e73696d745f6173796e635f636f70793c626631362c206361636865203d20616c776179732c2031323820623e0004da6105015101af010704b261030109035001030704f6570301050751e1d1050704c65703ba09f610098db1b5d9000d0601033303010d0601035d03030d0601035f03050d0601033303010d0601035d03030d0601035f030511060103270301130601032f03150b06010525290317190601031903190f4601070301031d170601033503150b0601052d230321110601034b0303130601034d03270b0601032503291906010319032b0f4601070301032d170601034f03270b060103230331110601034b0305130601034d03350b060103250337190601031903390f4601070301033b170601034f03350b06010323033f130601035503070b0601091d291d1b0343170601036b03070b06010979232d7b034d83424f07030185424f07030187424f0703018942510703018b42510703018d425107030111060103270301130601032f03630b06010525290365190601031903670f4601070301036b1b0671032f036b5906710397036f0d0601039903710b060105494903736342010903016b46010b0301055d797306010307037b110601032703011706010335037f0b0601052d2303816342010d03076b46010b0307057d876342010f03076946010b030705898b6946010b0307058d8b3d06750307030f6b46010b0307058f8763420111030775060103070593956946010b03070591973f063b037d039941063b0333039b110601032703012706790347059d9f0d0601033303a11b02550361150255039b43465513039d07a1a5a70d0601033303a91b02570361150657039f035d4346571303a10771adaf0d060103a303b10b060105a54903b30f460107030103b59502f7037f1b0259036121025903a745065903a905bdbf150223033f470623034905c3c10b0623034903c52f463f15036303c10b063f036303c921020103ab490601037f05bbcd93027b030163420117030165460119030505d1d39744811b03d54b0683038103bb27068503ad05d7c10d0601038103d91d46871d035103070b0687035103dd130601035503070b0601091d291d1b03e11b025b03af21025b03b145065b03b305ebed150223033f470623034905f1ef0b0623034903f32f463f15038303ef0b063f038303f721020103b549060103b705cffb93027b03016342011f030165460119030505ff0202974481210306024b0683036503cf27068503b9050a02ef0d06010365030e0231023a0203ed2d020103bb5b060103bd03160215068b0341035733068b03bf071e02a922020d0601033303260215068d034103575d068d03c1071e02d92e020d0601033903320215068f0341035733068f0385071e02b13a020d0601031f033e020b06010519210342020f46010703010346020f4601070301034a0215021703c31f061703c5053e0256020d0601031f035a020b0601051921035e020f46010703010362020f46010703010366020d0601031f035a020b06010519210372020f46010703010376020f4601070301037a024d4652022303c70326020d060103370386020d060103370386021d46951d035103070b0695035103920215020b033f1f060b0343055a029a020d0601031f039e020b060105192103a2020f460107030103a6020f460107030103aa020d0601031f039e020b060105192103b6020f460107030103ba020f460107030103be020d066202031f039e020b060105192103ca020f460107030103ce020f460107030103d20265460125030505d6026d65460125030505d6026d15020b033f1f060b0343055a02e6020d0601031f03ea020b060105192103ee020f460107030103f2020f460107030103f6020d0601031f03ea020b06010519210302030f46010703010306030f4601070301030a030d066a02031f03ea020b06010519210316030f4601070301031a030f4601070301031e036342012703016546010f03050526032a03670601030103e2026546012903050532032a03670601030103e2026706010301032e036d060103010736033e033a0363420127030165460129030505420346039b16010301034a03090307111506ad034103ce022906ad03070503ba097d0601030103be0999040103c209030105990401034603150697034103573306970385071e02b152030d0601031f0356030b0601051921035a030f4601070301035e030f46010703010362031d46252b03450356030b06250345036e031d46252d03450356030b062503450376031d46252f03450356030b06250345037e031d469b2f03450356030b069b03450386031b0261036f3b026103c9234661310371058e0392034f068a0203cb0396030d06010387039a030d06010387039a031106010371039a03130601036f03a6030b0601071b1b1b03aa031106010371039a03130601036f03ba030b0601071b1b1b03be0315020b03cd1f060b0343055603ce030d0601031f03d2030b060105192103d6030f460107030103da030f460107030103de030d0601031f03d2030b060105192103ea030f460107030103ee030f460107030103f2030d0627031f03d2030b060105192103fe030f46010703010302040f460107030103060415062703cf03060415022703d15f062703050512041604670601030d031a041502270389350427079a0322041e0465460125030505d6026d9b14010326040903010937043e03091602260232029a03990001018f00960291409e022715021703d31f061703d50532022a040d06010339032e040d06010339032e044d46a60223038b032e040d06010337033a040d06010337033a041d463115032b033a040b0631032b0346041106010353033a041306010367034e040b0601031d0352042102310373610631032b035a040b0631032b035e0463420133031115021703d71f0617038b053a046a040d06010337036e040d06010337036e041106010353036e041306010367037a040b0601031d037e041106010353036e0413060103670386040b0601031d038a0421021f03731d461f15032b0392040b061f032b03960421021f03731d461f15032b039e040b061f032b03a20451441f350566046e041106010331033202130601033d03aa040b0601091d1b1b1b03ae041106010331033202130601033d03c2040b0601091d1b1b1b03c60415029d038929069d030d059a03da0463420137030d65460129030505de04e2046342013903056546010f030505e604ea049b140103ee0409035dbd15021703e71f06170357053202ba090d0601033903be090d0601033903be091106010353033a04130601036703ca090b0601031d03ce09110601037703be0913060103e903d6090b0601051d1b03da091106010353033a04110601037703be0953060f033b03ea092b060f033b05e609ee0955060f033b03f209130601031d03f6090b0601031d03fa09170601032303f6090b0601032303020a130601031d03f6090b0601031d030a0a130601031d03f6090b0601031d03120a2b060f033b05ee09f6091d460f15032b031a0a0b060f032b031e0a1106010353033a04110601037703be0925060f0369053a041a0a0d06010337032e0a0d06010337032e0a25060f035705be091a0a0d06010339033a0a0d06010339033a0a1b020f031d23460f3b033b03460a25060f0369052e0a4a0a0d06010337034e0a0d06010337034e0a1b020f031d23460f3b033b035a0a25060f0357053a0a5e0a0d0601033903620a0d0601033903620a31020f03eb37040f076e0a4e0a620a990001011106010331033202130601033d03f2040b0601091d1b1b1b03f6041106010331038602130601033d030a050b0601091d1b1b1b030e051106010331033202110601033103860253060d033b0326052b060d033b0522052a0555060d033b032e05130601031d0332050b0601031d03360517060103230332050b06010323033e05130601031d0332050b0601031d034605130601031d0332050b0601031d034e052b060d033b052a0532051d460d15032b0356050b060d032b035a051106010331033202110601033103860225060d035705320256050d06010339036a050d06010339036a0525060d036905860256050d060103370376050d060103370376051b020d031d23460d3b033b03820525060d0357056a0586050d06010339038a050d06010339038a051b020d031d23460d3b033b03960525060d03690576059a050d06010337039e050d06010337039e0531020d03eb37040d07aa058a059e051106010331038602130601033d03ae050b0601091d1b1b1b03b20557469f3503110386021106010331038602130601033d03ca050b0601091d1b1b1b03ce0577469f07030903c60565460125030505d6026d65460125030505d6026d15020b033f1f060b0343055a02ee050d0601031f03f2050b060105192103f6050f460107030103fa050f460107030103fe050d0601031f03f2050b0601051921030a060f4601070301030e060f46010703010312060d06d202031f03f2050b0601051921031e060f46010703010322060f46010703010326066546010f0305052e062a03670601030103ea056546012903050536062a03670601030103ea0567060103010332066d06010301073a0642063e066546012903050546064603110601032703a1130601032f034e060b060105252903520619060103190356060f4601070301035e061706010335034e060b0601052d230366066342013d0303110601032703a1130601032f0376060b0601052529037a061906010319037e060f460107030103860617060103350376060b0601052d23038e069b1601054703034a06090367b50d0601033303a1110601032703a1130601032f03be090b060105252903c209190601031903c6090f460107030103ce09170601033503be090b0601052d2303d609730601030703d60211060103270301170601033503e6090b0601052d2303ea096342010d03076b46010b030705e209f6096342010f03076946010b030705fa09fe096946010b030705020afe093d06750307030f6b46010b030705060af6096342011103077506010307050e0a120a6946010b0307050a0a160a3f063b037d031a0a41063b0333031e0a11060103270301270679034705220a260a0d06010333032a0a1506ab03e5034e032906ab030f052a0a320a77460107030303360a1106010327032a0a130601032f033e0a0b060105252903420a190601031903460a0f4601070301034e0a1706010335033e0a0b0601052d2303560a1106010327032a0a130601032f03620a0b060105252903660a1906010319036a0a0f460107030103720a170601033503620a0b0601052d23037a0a990401052a0a3a0a03395d0d0601033303a1110601032703a1130601032f03be090b060105252903c209190601031903c6090f460107030103ce09170601033503be090b0601052d2303d609110601032703a1130601032f03e2090b060105252903e609190601031903ea090f460107030103f209170601033503e2090b0601052d2303fa09110601032703a1130601032f03060a0b0601052529030a0a1906010319030e0a0f460107030103160a170601033503060a0b0601052d23031e0a99040105a172060d06010333039a060d06010333039a061106010327039a06130601032f03aa060b060105252903ae06190601031903b2060f460107030103ba06170601033503aa060b0601052d2303c206130601035503070b0601091d291d1b03ce0615021703d91f061703db050e02e2060d0601036503e6060d0601036503e6066342013f03039f460141030305e205f2066342054303016342054503016342054703017f460549030309fa06f606fe0602078146054b030305f60606076342054303016342054d03016342054703017f4605490303090e070a07120716078146054b0303050a071a076342054303016342054f03016342054703017f46054903030922071e0726072a078146054b0303051e072e07634201510303a10601030903360771460153030905e2053a076342015103037146015303030532074207a106010309034607794601530309053e074a071b0265033d2346653b03310352074f066503dd0356070d0601038d035a070d0601038d035a071106010331035a07130601033d0366070b0601091d1b1b1b036a071106010331035a07130601033d037e070b0601091d1b1b1b03820721022103751d462115032b0396070b0621032b039a0721022103751d462115032b03a2070b0621032b03a60751442135054e075a0721026703751d466715032b03ae070b0667032b03b2076342015503016342014503019d1501fe02074603ba07be0705030b1b030100150647034103ba092906470303055a07be09a3460157030303c209150647034103ba09350447075a07ca09c6099900011106010331035a07130601033d03c2070b0601091d1b1b1b03c60757460603350309035a071106010331035a07130601033d03de070b0601091d1b1b1b03e2079f460159030305da0772066342054303016342054503016342054703017f460549030309fa07f607fe0702086f4601530303050608f6076342054303016342054d03016342054703017f4605490303090e080a08120816086f4601530303050a081a086342054303016342054f03016342054703017f46054903030922081e0826082a086f4601530303051e082e0811060103df03e60613060103e10336080b060107e31b1b033a0815020b033f1f060b0343055a024a080d0601031f034e080b06010519210352080f46010703010356080f4601070301035a080d0601031f034e080b06010519210366080f4601070301036a080f4601070301036e080d0645031f034e080b0601051921037a080f4601070301037e080f46010703010382086546010f0305058a082a0315020b033f1f060b0343055a0292080d0601031f0396080b0601051921039a080f4601070301039e080f460107030103a2080d0601031f0396080b060105192103ae080f460107030103b2080f460107030103b6080d0645031f0396080b060105192103c2080f460107030103c6080f460107030103ca086546010f030505d2082a0365460125030505d6026d670601030103d60865460129030505de082a03670601030103d608670601030103da086d0601030107e208ea08e60865460129030505ee08460315020b033f1f060b0343055a02f6080d0601031f03fa080b060105192103fe080f46010703010302090f46010703010306090d0601031f03fa080b06010519210312090f46010703010316090f4601070301031a090d0645031f03fa080b06010519210326090f4601070301032a090f4601070301032e096546010f03050536092a0315020b033f1f060b0343055a023e090d0601031f0342090b06010519210346090f4601070301034a090f4601070301034e090d0601031f0342090b0601051921035a090f4601070301035e090f46010703010362090d0645031f0342090b0601051921036e090f46010703010372090f46010703010376096546010f0305057e092a0365460125030505d6026d6706010301038209654601290305058a092a03670601030103820967060103010386096d06010301078e0996099209654601290305059a0946036706010301039e0965460129030505a2092a036706010301039e096342014503016d0601030107a609ae09aa0965460129030505b20946039b140103b60909030d21a346015b03030332086342015d030371460153030305ba09be096f4601530303053207c20979460153030305c6099e061506a9034103ce023504a90705ce09ca0999000101090001075101b35f07046e0903c19602098db1b52d000d0601033303010d0601035d03030d0601035f03050d0601033303010d0601035d03030d0601035f030511060103270301130601032f03150b06010525290317190601031903190f4601070301031d170601033503150b0601052d230321110601034b0303130601034d03270b0601032503291906010319032b0f4601070301032d170601034f03270b060103230331110601034b0305130601034d03350b060103250337190601031903390f4601070301033b170601034f03350b06010323033f1b0233038f2d02330391390633031b0543450b0633031b03471b024903553b0249036b23464931036d054b4d1d466d1d0351034f0b066d0351035111060103270301130601032f03550b06010525290357190601031903590f4601070301035d1b06350325035d2d0235039339063503250561630b063503250365190601031903670f460107030103691b023703612346373b0395036d2f4637150363036f0b06370363037111060103270301130601032f03750b06010525290377190601031903790f4601070301037d170601033503750b0601052d230381110601034b0303130601034d03870b0601032503891906010319038b0f4601070301038d170601034f03870b060103230391110601034b0305130601034d03950b060103250397190601031903990f4601070301039b170601034f03950b06010323039f1306010355034f0b0601091d291d1b03a3170601036b034f0b06010979232d7b03ad7b0601030b036b63420161030b63420163030b6342016503010546016703171907b7b9b9bbb9b9bd0103054f0900010603010501009e2916021b1b1d1b371b1b372171190b06030603130f1b171929db2d2b0b193b1322021f1113f325130d21198112026f0f5717151509070d0f252f292d2d2d2d2929290b150f170b0b170d0b0b0f0b0b0d0b131d152f212b21131d231d271917112917130f1319130b1b2f0b0f151919151f191f0d0b171b171715171913170f190f0b0f0907170b0d0b0b09116275696c74696e006770750066756e630063757465006172697468006e76766d00637574655f6e766770750063660073636600766563746f72006c6c766d006d6f64756c65006c61756e63685f66756e630072657475726e006765745f6c6561766573006765745f69746572006765745f7363616c617273006765745f6c61796f7574006765745f7368617065006d616b655f636f6f7264006765745f73747269646500746f5f696e745f7475706c65006d616b655f73686170650073697a6500736c696365006d616b655f696e745f7475706c65006d616b655f6c61796f7574006c6f676963616c5f646976696465006d616b655f76696577006d656d7265662e6c6f616400636f6d706f736974696f6e006d616b655f74696c6500636f73697a650061746f6d0074696c65642e636f70792e706172746974696f6e5f53006d656d7265662e73746f726500636f7079006365696c5f646976006d616b655f73747269646500707472746f696e7400617373756d6500696e74746f707472006c6f63616c5f74696c65006d616b655f6f7264657265645f6c61796f75740063726432696478006164645f6f6666736574007265636173745f69746572006d616b655f667261676d656e745f6c696b65006d656d7265662e616c6c6f6361006d656d7265662e73746f72655f7665630072696768745f696e766572736500636f616c65736365006d656d7265662e6c6f61645f766563006d616b655f6964656e746974795f74656e736f72006d616b655f74696c65645f636f70790074696c65642e636f70792e706172746974696f6e5f4400656c656d5f6c657373007475706c652e70726f6475637400636f6e7374616e7400636d70690065787475690061646469006d756c690073656c6563740061646466006d756c6600657874736900666c6f6f7264697673690065787466007375626600696e6465785f63617374007472756e6369007368666c2e73796e6300666d617800726561642e7074782e737265672e7469642e7800726561642e7074782e737265672e7469642e7900726561642e7074782e737265672e7469642e7a00726561642e7074782e737265672e63746169642e7800726561642e7074782e737265672e63746169642e7900726561642e7074782e737265672e63746169642e7a0063702e6173796e632e636f6d6d69742e67726f75700063702e6173796e632e776169742e67726f757000617263682e6765745f64796e5f736d656d5f73697a6500617263682e6765745f64796e5f736d656d00617373657274007969656c6400696600666f7200726564756374696f6e0062726f61646361737400696e6c696e655f61736d002f686f6d652f6a65726f6d656b752f6375746c6173732f717561636b2d73616e64626f782f63652e7079006b65726e656c002f686f6d652f6a65726f6d656b752f6375746c6173732f746869726470617274792f717561636b2f717561636b2f7574696c732e7079002f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f707974686f6e5f7061636b616765732f6375746c6173732f7574696c732f736d656d5f616c6c6f6361746f722e7079002f686f6d652f6a65726f6d656b752f6375746c6173732f746869726470617274792f717561636b2f717561636b2f726564756374696f6e5f626173652e7079007072656469636174655f6b00616c6c6f636174655f74656e736f72006578703266005f5f63616c6c5f5f00646f6d61696e5f6f66667365745f693634002f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f707974686f6e5f7061636b616765732f6375746c6173732f637574652f636f72652e70790066696c6c5f6f6f62006b65726e656c73005f6765745f74765f6c61796f7574006b65726e656c5f6375746c6173735f6b65726e656c5f5f5f6d61696e5f5f43726f7373456e74726f70795f6f626a6563745f61745f5f74656e736f7270747262663136676d656d616c69676e31366f31363136315f74656e736f72707472693634676d656d6f315f74656e736f72707472663332676d656d6f315f4e6f6e655f31365f36345f3000616c6c6f63617465005f6765745f726564756374696f6e5f6275666665725f6c61796f7574005f5f6765746974656d5f5f003d662c66006770752e636f6e7461696e65725f6d6f64756c65006c6c766d2e656d69745f635f696e74657266616365006375746c6173735f5f5f63616c6c5f5f5f5f5f6d61696e5f5f43726f7373456e74726f70795f6f626a6563745f61745f5f54656e736f72676d656d6f31363136315f54656e736f72676d656d6f315f54656e736f72676d656d6f315f4e6f6e655f435573747265616d307830005f736d656d5f73697a655f696e5f627974657300637574652e6b65726e656c006770752e6b65726e656c006e76766d2e7265716e746964007075626c6963005f5f696e69745f5f00416c6c6f636174696f6e206661696c65643a20736861726564206d656d6f727920616c6c6f636174696f6e206578636565647320617661696c61626c65206d656d6f72792073657420696e206b65726e656c206c61756e63682e20416c6c6f63617465642062797465733a20323034382062797465732e20506c65617365207265647563652074686520616c6c6f636174696f6e206f72207365742061206c617267657220736d656d2073697a6520696e206b65726e656c206c61756e63682e00416c6c6f636174696f6e206661696c65643a20736861726564206d656d6f727920616c6c6f636174696f6e206578636565647320617661696c61626c65206d656d6f72792073657420696e206b65726e656c206c61756e63682e20416c6c6f63617465642062797465733a20323038302062797465732e20506c65617365207265647563652074686520616c6c6f636174696f6e206f72207365742061206c617267657220736d656d2073697a6520696e206b65726e656c206c61756e63682e0066696c6c00776172705f726564756365002f686f6d652f6a65726f6d656b752f6375746c6173732f746869726470617274792f717561636b2f717561636b2f7265647563652e7079006c6f6f705f616e6e6f746174696f6e006c67322e617070726f782e66747a2e6633322024302c2024313b007468656e5f626c6f636b5f37006c6f6f705f626f64795f3232006578322e617070726f782e66747a2e6633322024302c2024313b007468656e5f626c6f636b5f35007468656e5f626c6f636b5f3131007468656e5f626c6f636b5f33007468656e5f626c6f636b5f310008da026905010107016901116e03dd01016f7e03030103eb05ee030373031303770f0101010d0303030323051602037f051a020397053202053602054e02031d035f031505ee0405fe040566020709030305b202033305c20205c6020707010305da0205de0209f603520303290341032b05ff010701010103a103a303a505f60305fa020f272a03a733010109f60356030f271203a70101010516030d01b70101b90103c703c903cb1fcd3503030303030303010101030901435554455f44534c46616c736546616c736546616c7365547275655472756554727565313046616c7365736d5f39306146616c736546616c736546616c736546616c736531303030547275652f7573722f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f6c69622f6c69626d6c69725f72756e6e65725f7574696c732e736f3a2f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f6c69622f6c69626d6c69725f637564615f72756e74696d652e736f3a2f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f6c69622f6c69626d6c69725f635f72756e6e65725f7574696c732e736f6f70742d6c6576656c3d3320656e61626c652d6465766963652d617373657274696f6e733d66616c7365]
2025-09-04 14:18:22,739:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [get_module_hash]: Version=[73e45d4a78be763c1343d52b6ac3c7f7ac6a79748a2a5606f136b96a39f549ce]
2025-09-04 14:18:22,739:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[ce84ba252b49d3ab7c427e3ef236f7bc93587909d59a76659ab266ab26d6f0ad]
2025-09-04 14:18:22,743:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 14:18:22,744:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 14:18:22,744:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[ce84ba252b49d3ab7c427e3ef236f7bc93587909d59a76659ab266ab26d6f0ad]
2025-09-04 14:18:22,795:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 14:18:22,799:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [load_cubin_module_data]: cuModuleLoadData 751810608
2025-09-04 14:18:22,800:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [get_kernel_function]: cuModuleGetFunction <CUmodule 0x2ce26330> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 14:18:22,800:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [get_kernel_function]: <CUfunction 0x2cd5cb70> <-- cuModuleGetFunction
2025-09-04 14:18:22,800:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 14:18:22,800:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 14:18:22,802:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 15:09:40,812:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:10:55,478:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:10:55,479:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:11:50,005:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:20:51,229:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,539:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,540:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,542:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,542:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,542:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,542:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,544:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,544:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,544:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,544:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,544:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,544:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,545:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,546:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,546:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,546:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,546:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,546:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,636:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,636:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,636:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,636:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,636:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:14,917:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:24:14,918:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:24:14,918:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:24:14,925:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:24:14,925:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:24:14,925:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:24:14,926:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:24:14,926:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,927:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,927:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,927:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:24:14,927:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:24:14,927:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_mlir_function_types]: Execution Arguments: 1144203312, 1144221040, 1144221472, 128969069594176
2025-09-04 15:24:14,927:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:24:14,927:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:24:14,928:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:24:14,928:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,928:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,928:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,928:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:24:14,928:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:24:14,929:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x754bf39478c0>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:24:14,929:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:24:14,930:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:24:14,932:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:24:14,943:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:24:14,945:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: Generating device kernel
2025-09-04 15:24:14,945:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:24:14,946:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:24:14,947:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x754bf39478c0>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:24:14,947:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:24:14,947:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x754bf39478c0>, <cutlass.cute.core._Tensor object at 0x754bf39766f0>, <cutlass.cute.core._Tensor object at 0x754bf39764e0>, <cutlass.cute.core._Tensor object at 0x754bf3976510>, None, <cutlass.cute.core._Layout object at 0x754bf395c950>, (16, 64)] ; kwargs: {}
2025-09-04 15:24:14,953:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:24:14,953:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:24:14,955:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:24:14,957:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x754bf3974350>, <cutlass.cute.core._Tensor object at 0x754bf39764e0>]] yield_args [[0]]
2025-09-04 15:24:14,958:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:24:14,958:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:24:14,958:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,959:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:24:14,959:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:24:14,959:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,959:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:24:14,959:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,960:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:24:14,960:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:24:14,960:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,961:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:24:14,962:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:24:14,962:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,962:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:24:14,962:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,962:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:24:14,962:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:24:14,963:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:24:14,964:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,964:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:24:14,964:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,964:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:24:14,964:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:24:14,964:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:24:14,965:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,965:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:24:14,965:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,965:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:24:14,965:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,965:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:24:14,966:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:24:14,970:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:24:14,972:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x754bf39776e0>, <cutlass.cute.core._Tensor object at 0x754bf3947a70>, <cutlass.cute.core._Tensor object at 0x754bf3974410>, <cutlass.cute.core._Tensor object at 0x754bf39cd100>]] yield_args [[]]
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,973:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:24:14,974:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:24:14,974:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,974:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,974:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:24:14,974:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:24:14,979:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:24:14,980:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x754bf39cd100>, 0, 0, <cutlass.cute.core._Tensor object at 0x754bf3977aa0>, <cutlass.cute.core._Tensor object at 0x754bf3974410>]] yield_args [[]]
2025-09-04 15:24:14,980:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:14,980:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,980:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,980:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:24:14,981:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:24:14,981:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,981:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,982:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:14,982:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,982:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,982:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:24:14,983:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:24:14,983:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,983:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,985:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x754bf3974350>, <cutlass.cute.core._Tensor object at 0x754bf39766f0>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x754bf39473e0>, 0.0]]
2025-09-04 15:24:14,986:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:24:14,986:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:14,987:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:24:14,987:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,987:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:24:14,988:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:24:14,988:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:24:14,989:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:24:14,989:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,989:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:24:14,989:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:14,990:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:24:14,990:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,990:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:24:14,990:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:24:14,990:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x754bf4d834f0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:24:14,991:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x754bf4d834f0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:24:14,992:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,993:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:24:14,993:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:14,994:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:24:14,994:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,994:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:24:14,994:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:24:14,995:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:24:14,996:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:24:14,996:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,996:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:24:14,996:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:14,996:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:24:14,996:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,997:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:24:14,997:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x754bf4d834f0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:24:14,997:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x754bf4d834f0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:14,998:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:24:14,999:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:14,999:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:24:14,999:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:24:15,000:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:24:15,000:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:24:15,001:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:15,001:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:24:15,001:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:15,001:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:24:15,001:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,001:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:24:15,003:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:24:15,003:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x754bf5735be0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:24:15,003:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x754bf5735be0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:24:15,004:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:24:15,004:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:24:15,004:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:24:15,004:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:24:15,004:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,004:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:24:15,005:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:24:15,005:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,005:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:24:15,007:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:24:15,014:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:24:15,014:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:24:15,015:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:24:15,017:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:24:15,019:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:24:15,019:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:24:15,023:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:24:15,024:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x754bf2f5c9e0>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:24:15,024:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:24:15,024:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:15,024:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,024:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,025:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:24:15,025:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [create_for_op]: Pipelining attribute: None
2025-09-04 15:24:15,025:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:24:15,028:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:24:15,029:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x754bf2f5c9e0>]
2025-09-04 15:24:15,029:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:15,029:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,029:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,029:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:24:15,030:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:24:15,030:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,030:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,034:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:24:15,040:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x754bf3974350>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x754bf39478c0>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x754bf3976510>, None]] yield_args [[]]
2025-09-04 15:24:15,042:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:15,042:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,043:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,043:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:24:15,044:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:24:15,044:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,044:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,044:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:24:15,044:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,044:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [unpack_to_irvalue]: ------------------ 
2025-09-04 15:24:15,044:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:24:15,045:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:24:15,045:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,045:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [pack_from_irvalue]: ------------------ 
2025-09-04 15:24:15,046:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x754bf39c4670>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:24:15,053:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [jit_runner]: jit_runner
2025-09-04 15:24:15,181:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [get_module_hash]: Bytecode=[]
2025-09-04 15:24:15,181:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [get_module_hash]: Version=[90b33a815877be3d9b336fac20a1b40fb8bc35f32289f4bd9b72b6cd7654889d]
2025-09-04 15:24:15,181:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[4a1d9007ecf55cc3e5de3e1a42103036d26eccd42444e9b6d1b3e6c94332de15]
2025-09-04 15:24:15,187:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:24:15,188:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:24:15,188:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[4a1d9007ecf55cc3e5de3e1a42103036d26eccd42444e9b6d1b3e6c94332de15]
2025-09-04 15:24:15,243:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:24:15,247:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [load_cubin_module_data]: cuModuleLoadData 1145864272
2025-09-04 15:24:15,247:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [get_kernel_function]: cuModuleGetFunction <CUmodule 0x443ab530> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:24:15,247:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [get_kernel_function]: <CUfunction 0x444c4200> <-- cuModuleGetFunction
2025-09-04 15:24:15,248:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:24:15,248:CUTE_DSL:INFO::$(pathname)s:$(lineno)d [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 15:24:15,250:CUTE_DSL:DEBUG::$(pathname)s:$(lineno)d [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 15:26:39,669:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:218 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:26:39,670:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:360 [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:26:39,670:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:361 [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:26:39,670:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,670:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,671:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,672:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,674:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,674:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,674:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,674:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,677:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,763:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,763:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,763:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,763:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:39,763:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:40,041:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:218 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:26:40,041:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:26:40,041:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:26:40,047:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:26:40,048:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:578 [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:26:40,048:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1400 [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:26:40,049:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:26:40,049:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,049:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,049:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,049:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:26:40,049:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:26:40,049:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:872 [generate_mlir_function_types]: Execution Arguments: 341430816, 341448544, 341448976, 130653821366976
2025-09-04 15:26:40,050:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:873 [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:26:40,050:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1111 [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:26:40,051:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:26:40,051:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,051:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,051:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,051:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:26:40,051:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:26:40,052:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x76d435f14f50>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:26:40,052:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:656 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:26:40,052:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:26:40,054:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:26:40,065:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:26:40,067:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:578 [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1531 [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:26:40,067:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:793 [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1549 [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1550 [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1551 [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1652 [kernel_wrapper]: Generating device kernel
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:240 [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1671 [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:26:40,068:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:613 [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:26:40,069:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x76d435f14f50>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:26:40,069:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:656 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:26:40,069:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1682 [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x76d435f14f50>, <cutlass.cute.core._Tensor object at 0x76d435f17560>, <cutlass.cute.core._Tensor object at 0x76d435f17b60>, <cutlass.cute.core._Tensor object at 0x76d435f17aa0>, None, <cutlass.cute.core._Layout object at 0x76d4369ea930>, (16, 64)] ; kwargs: {}
2025-09-04 15:26:40,074:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:26:40,075:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:26:40,076:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:26:40,078:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x76d435f82690>, <cutlass.cute.core._Tensor object at 0x76d435f17b60>]] yield_args [[0]]
2025-09-04 15:26:40,079:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:26:40,079:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:26:40,079:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,079:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:26:40,080:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:26:40,080:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,080:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:26:40,080:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,080:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:26:40,081:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:26:40,081:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:26:40,081:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,081:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:26:40,081:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,081:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:26:40,081:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:26:40,082:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:26:40,083:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:26:40,084:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,084:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:26:40,084:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,084:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:26:40,084:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:26:40,084:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:26:40,085:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,085:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:26:40,085:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,085:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:26:40,085:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,085:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:26:40,086:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:26:40,090:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:26:40,091:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x76d435f15f10>, <cutlass.cute.core._Tensor object at 0x76d435f17110>, <cutlass.cute.core._Tensor object at 0x76d435f16a20>, <cutlass.cute.core._Tensor object at 0x76d435f83650>]] yield_args [[]]
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,092:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:26:40,093:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:26:40,093:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,093:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,093:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:26:40,093:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:26:40,097:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x76d435f83650>, 0, 0, <cutlass.cute.core._Tensor object at 0x76d435f16690>, <cutlass.cute.core._Tensor object at 0x76d435f16a20>]] yield_args [[]]
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,099:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,100:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,100:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,100:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,100:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:26:40,101:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:26:40,101:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,101:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,103:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x76d435f82690>, <cutlass.cute.core._Tensor object at 0x76d435f17560>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x76d437378da0>, 0.0]]
2025-09-04 15:26:40,105:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:26:40,105:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,105:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:26:40,105:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,105:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:26:40,106:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:26:40,106:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:26:40,107:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:26:40,108:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,108:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:26:40,108:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,108:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:26:40,108:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,108:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:26:40,109:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:26:40,109:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x76d435597bb0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:26:40,109:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x76d435597bb0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:26:40,110:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,112:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:26:40,112:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,112:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:26:40,112:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,112:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:26:40,113:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:26:40,114:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:26:40,114:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:26:40,115:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,115:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:26:40,115:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,115:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:26:40,115:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,115:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:26:40,115:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x76d435597bb0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:26:40,116:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x76d435597bb0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:26:40,117:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,118:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:577 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:26:40,118:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,118:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:26:40,118:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:618 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:26:40,119:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:26:40,120:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:620 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:26:40,121:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,121:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:622 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:26:40,121:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,121:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:26:40,121:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,121:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:26:40,122:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:26:40,122:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x76d435f14860>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:26:40,123:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:529 [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x76d435f14860>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:531 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:533 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:26:40,124:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,124:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:26:40,126:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:26:40,132:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:26:40,133:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:26:40,133:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:26:40,136:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:26:40,137:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1272 [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:26:40,138:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:26:40,141:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:26:40,142:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:204 [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x76d435f164b0>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:26:40,142:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:133 [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:26:40,142:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,142:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,142:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,143:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:263 [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:26:40,143:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:275 [create_for_op]: Pipelining attribute: None
2025-09-04 15:26:40,143:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:277 [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:26:40,145:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:26:40,146:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:321 [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x76d435f164b0>]
2025-09-04 15:26:40,146:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,146:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,146:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,146:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:26:40,147:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:26:40,147:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,147:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,149:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:26:40,154:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x76d435f82690>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x76d435f14f50>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x76d435f17aa0>, None]] yield_args [[]]
2025-09-04 15:26:40,156:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,156:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,156:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,156:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:26:40,157:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:26:40,157:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,157:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,158:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:575 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:26:40,158:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:616 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,158:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:625 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:26:40,158:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:26:40,159:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:527 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:26:40,159:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:556 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,159:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:559 [pack_from_irvalue]: ------------------ 
2025-09-04 15:26:40,159:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1704 [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x76d4355289f0>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:26:40,165:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:461 [jit_runner]: jit_runner
2025-09-04 15:26:40,277:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1052 [get_module_hash]: Bytecode=[]
2025-09-04 15:26:40,277:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1053 [get_module_hash]: Version=[720e613259a181068886e109c6a849e42911c676435a90fc280eac1b21c45e0e]
2025-09-04 15:26:40,277:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1054 [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[175fdec3ec34a0b39366b8a0785944afec30f4f681e34e72b8c5252d1c2038ff]
2025-09-04 15:26:40,281:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:26:40,282:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1015 [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:26:40,282:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1159 [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[175fdec3ec34a0b39366b8a0785944afec30f4f681e34e72b8c5252d1c2038ff]
2025-09-04 15:26:51,967:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/jit_executor.py:268 [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:26:51,971:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:293 [load_cubin_module_data]: cuModuleLoadData 344063392
2025-09-04 15:26:51,972:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:304 [get_kernel_function]: cuModuleGetFunction <CUmodule 0x14835cd0> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:26:51,972:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:308 [get_kernel_function]: <CUfunction 0x1481eb40> <-- cuModuleGetFunction
2025-09-04 15:26:51,972:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:218 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:26:51,972:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:141 [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 15:26:51,974:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 15:28:18,357:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:218 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:28:18,357:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:359 [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:28:18,357:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:360 [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:28:18,357:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,357:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,358:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,358:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,360:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,360:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,360:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,360:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,363:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,364:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,405:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,406:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,406:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,406:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,406:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,679:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:218 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:28:18,679:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:28:18,679:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:28:18,686:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:28:18,686:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:28:18,686:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1399 [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:871 [generate_mlir_function_types]: Execution Arguments: 615754640, 615772368, 615773936, 127217952617824
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:872 [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:28:18,688:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1110 [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:28:18,689:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:28:18,689:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,689:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,689:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,689:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:28:18,690:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:28:18,690:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x73b43c3462d0>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:28:18,690:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:28:18,691:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:28:18,693:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:28:18,704:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:28:18,705:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:28:18,705:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1530 [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:28:18,705:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:28:18,705:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,705:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,705:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,705:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:28:18,705:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:28:18,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:28:18,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1548 [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:28:18,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1549 [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:28:18,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1550 [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:28:18,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1651 [kernel_wrapper]: Generating device kernel
2025-09-04 15:28:18,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:240 [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:28:18,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1670 [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:28:18,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x73b43c3462d0>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:28:18,708:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:28:18,708:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1681 [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x73b43c3462d0>, <cutlass.cute.core._Tensor object at 0x73b43c345dc0>, <cutlass.cute.core._Tensor object at 0x73b43c3d8c20>, <cutlass.cute.core._Tensor object at 0x73b43d788da0>, None, <cutlass.cute.core._Layout object at 0x73b43c339070>, (16, 64)] ; kwargs: {}
2025-09-04 15:28:18,712:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:28:18,713:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:28:18,758:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:28:18,760:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x73b43c3dbda0>, <cutlass.cute.core._Tensor object at 0x73b43c3d8c20>]] yield_args [[0]]
2025-09-04 15:28:18,761:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:28:18,761:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:28:18,761:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,761:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:28:18,762:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:28:18,762:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,762:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:28:18,762:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,762:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,763:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:28:18,764:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:28:18,764:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,764:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:28:18,764:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,764:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:28:18,764:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,765:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:28:18,766:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:28:18,766:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:28:18,766:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,766:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:28:18,766:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,766:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:28:18,766:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,767:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:28:18,767:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:28:18,771:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:28:18,772:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x73b43c3db3e0>, <cutlass.cute.core._Tensor object at 0x73b43c3d92e0>, <cutlass.cute.core._Tensor object at 0x73b43c346f30>, <cutlass.cute.core._Tensor object at 0x73b43c3bc620>]] yield_args [[]]
2025-09-04 15:28:18,773:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,773:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,773:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,773:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,774:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,774:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:28:18,775:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:28:18,779:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:28:18,780:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x73b43c3bc620>, 0, 0, <cutlass.cute.core._Tensor object at 0x73b43c3dae40>, <cutlass.cute.core._Tensor object at 0x73b43c346f30>]] yield_args [[]]
2025-09-04 15:28:18,780:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,780:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,780:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,780:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:28:18,781:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:28:18,781:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,781:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,782:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,782:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,782:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,782:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:28:18,782:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:28:18,782:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,783:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,785:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x73b43c3dbda0>, <cutlass.cute.core._Tensor object at 0x73b43c345dc0>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x73b43c345820>, 0.0]]
2025-09-04 15:28:18,786:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:28:18,786:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,786:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:28:18,786:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,786:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:28:18,787:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:28:18,788:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:28:18,788:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:28:18,789:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,789:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:28:18,789:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,789:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:28:18,789:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,789:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:28:18,790:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:28:18,790:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73b43d7410b0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73b43d7410b0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:28:18,791:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,793:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:28:18,793:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,793:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:28:18,793:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,793:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:28:18,794:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:28:18,794:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:28:18,795:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:28:18,795:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,795:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:28:18,795:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,796:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:28:18,796:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,796:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:28:18,796:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73b43d7410b0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:28:18,796:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73b43d7410b0>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,797:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:28:18,798:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,798:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:28:18,798:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:28:18,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:28:18,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:28:18,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:28:18,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:28:18,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:28:18,801:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:28:18,801:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x73b43c3da150>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:28:18,802:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x73b43c3da150>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:28:18,803:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,803:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:28:18,805:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:28:18,811:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:28:18,811:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:28:18,812:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:28:18,814:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:28:18,816:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:28:18,816:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:28:18,820:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:28:18,820:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:204 [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x73b43c3beea0>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:28:18,820:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:133 [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:28:18,821:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,821:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,821:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,821:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:263 [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:28:18,821:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:275 [create_for_op]: Pipelining attribute: None
2025-09-04 15:28:18,821:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:277 [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:28:18,823:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:28:18,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:321 [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x73b43c3beea0>]
2025-09-04 15:28:18,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:28:18,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:28:18,826:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,826:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,828:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:28:18,833:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x73b43c3dbda0>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x73b43c3462d0>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x73b43d788da0>, None]] yield_args [[]]
2025-09-04 15:28:18,834:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,834:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,834:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,835:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:28:18,835:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:28:18,835:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,835:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,836:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:28:18,836:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,836:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:28:18,836:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:28:18,837:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:28:18,837:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,837:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:28:18,837:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1703 [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73b43b9ad1b0>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:28:18,842:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:28:18,954:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1051 [get_module_hash]: Bytecode=[]
2025-09-04 15:28:18,954:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1052 [get_module_hash]: Version=[4e6a4e3d24f429344e14c91cb0169ce0c5804f00ca74a9f6a1c4c0ab0606cd5d]
2025-09-04 15:28:18,954:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1053 [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[88af56571991b1c75c45d1fe75664ed9bb0f74febec7bcc366515ec5df0d3861]
2025-09-04 15:28:18,959:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:28:18,960:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1014 [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:28:18,960:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1158 [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[88af56571991b1c75c45d1fe75664ed9bb0f74febec7bcc366515ec5df0d3861]
2025-09-04 15:32:23,393:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:32:23,393:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:359 [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:32:23,393:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:360 [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:32:23,393:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,393:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,395:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,395:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,397:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,397:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,397:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,398:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,400:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,401:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,401:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,401:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,401:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,443:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,443:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,443:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,443:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,443:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:23,725:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:32:23,725:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:32:23,726:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:32:23,733:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:32:23,734:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:32:23,734:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1399 [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:32:23,735:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:32:23,735:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,735:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,736:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,736:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:32:23,736:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:32:23,736:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:871 [generate_mlir_function_types]: Execution Arguments: 283481136, 283498864, 283500432, 132953807020928
2025-09-04 15:32:23,736:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:872 [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:32:23,736:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1110 [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:32:23,737:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:32:23,737:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,737:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,737:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,737:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:32:23,737:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:32:23,738:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x78ebb8741a60>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:32:23,738:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:32:23,738:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:32:23,741:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:32:23,797:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:32:23,799:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1530 [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1548 [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1549 [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1550 [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1651 [kernel_wrapper]: Generating device kernel
2025-09-04 15:32:23,799:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:240 [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1670 [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:32:23,800:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:32:23,801:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x78ebb8741a60>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:32:23,801:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:32:23,801:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1681 [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x78ebb8741a60>, <cutlass.cute.core._Tensor object at 0x78ebb87c8890>, <cutlass.cute.core._Tensor object at 0x78ebb87c8860>, <cutlass.cute.core._Tensor object at 0x78ebb87c8680>, None, <cutlass.cute.core._Layout object at 0x78ecaa328a10>, (16, 64)] ; kwargs: {}
2025-09-04 15:32:23,806:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:32:23,806:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:32:23,808:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:32:23,810:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x78ebb87ca3f0>, <cutlass.cute.core._Tensor object at 0x78ebb87c8860>]] yield_args [[0]]
2025-09-04 15:32:23,811:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:32:23,811:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:32:23,811:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,811:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:32:23,812:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:32:23,812:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,812:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:32:23,812:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,812:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:32:23,813:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,814:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:32:23,814:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:32:23,814:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,814:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:32:23,814:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,814:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:32:23,814:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:32:23,815:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:32:23,816:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,816:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:32:23,816:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,816:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:32:23,816:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:32:23,816:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:32:23,817:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,817:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:32:23,817:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,817:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:32:23,817:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,817:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:32:23,818:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:32:23,821:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:32:23,823:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x78ebb8743500>, <cutlass.cute.core._Tensor object at 0x78ebb8742420>, <cutlass.cute.core._Tensor object at 0x78ebb87c9160>, <cutlass.cute.core._Tensor object at 0x78ebc2719460>]] yield_args [[]]
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:32:23,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:32:23,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,825:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:32:23,826:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:32:23,830:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:32:23,831:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x78ebc2719460>, 0, 0, <cutlass.cute.core._Tensor object at 0x78ebb87cb320>, <cutlass.cute.core._Tensor object at 0x78ebb87c9160>]] yield_args [[]]
2025-09-04 15:32:23,831:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,831:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,831:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,832:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:32:23,832:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:32:23,832:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,832:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,833:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,833:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,833:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,833:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:32:23,834:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:32:23,834:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,834:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,836:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x78ebb87ca3f0>, <cutlass.cute.core._Tensor object at 0x78ebb87c8890>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x78ebb8743aa0>, 0.0]]
2025-09-04 15:32:23,838:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:32:23,838:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,838:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:32:23,838:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,838:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:32:23,839:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:32:23,839:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:32:23,840:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:32:23,840:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,840:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:32:23,840:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,841:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:32:23,841:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,841:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:32:23,841:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:32:23,841:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x78ebb9b77230>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:32:23,842:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x78ebb9b77230>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:32:23,843:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,844:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:32:23,844:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,845:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:32:23,845:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,845:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:32:23,846:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:32:23,846:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:32:23,847:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:32:23,847:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,847:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:32:23,847:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,848:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:32:23,848:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,848:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:32:23,848:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x78ebb9b77230>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:32:23,848:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x78ebb9b77230>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:32:23,849:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,849:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:32:23,849:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:32:23,849:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:32:23,849:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,849:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,849:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:32:23,850:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,850:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:32:23,850:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,850:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:32:23,850:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,850:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:32:23,851:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:32:23,851:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:32:23,852:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:32:23,853:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,853:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:32:23,853:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,853:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:32:23,853:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,853:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:32:23,854:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:32:23,854:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x78ebb87c8110>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:32:23,855:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x78ebb87c8110>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:32:23,856:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,857:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:32:23,859:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:32:23,865:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:32:23,865:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:32:23,866:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:32:23,868:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:32:23,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:32:23,871:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:32:23,874:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:204 [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x78ebb7d39520>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:133 [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:263 [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:275 [create_for_op]: Pipelining attribute: None
2025-09-04 15:32:23,875:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:277 [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:32:23,878:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:32:23,879:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:321 [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x78ebb7d39520>]
2025-09-04 15:32:23,879:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,879:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,879:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,879:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:32:23,880:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:32:23,880:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,880:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,883:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:32:23,888:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x78ebb87ca3f0>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x78ebb8741a60>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x78ebb87c8680>, None]] yield_args [[]]
2025-09-04 15:32:23,889:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,890:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,890:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,890:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:32:23,890:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:32:23,890:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,890:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,891:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:32:23,891:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,891:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:32:23,891:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:32:23,892:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:32:23,892:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,892:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:32:23,892:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1703 [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x78ebb7d52370>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:32:23,898:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:32:24,012:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1051 [get_module_hash]: Bytecode=[4d4cef520d4d4c495232302e302e3067697400014202170105090d1115191d212529a501032f03052f3305050b3707593b3f43474b4f53575b5f63676b6f73777b7f83878b8f93979b9fa3a7abafb3b7bbbfc3c7cbcfd3d7dbdfe3e7091debeff3f7fbff06020e0216021e0226022e0236023e020b1546024e0256025e0266026e0276027e0286028e020d0596029e020f03a6021107ae02b602be021305c602ce021503d60203a2055e03ef01fb070b170b0b131317130f0f13070b0f17131313131f0f0b0b130f0f0f0b0f0b130f0b13170f230b0f0f0b0f0f13130b0f130b13130b0b0f0b0f0f0f0f0f130b0f131313130b1313130b0b1313231313130f0f1f0b171717130b130b0b0b131313130b130f1313130b230b0b0b431b0b0b0f131313130f1717171313130b090559590b035901a91317171713130b1317171313130b131717171717131717171317131717331723171713171713171317131717170b17170f0f171713170f1f0b170b1313130f1b0b1313170b1f0b170b130f0f170f17170f170f1713055d491503b901170f070b0f13070b07131f1f03034507d3554545817149457949554d59a1855d8585516d4545b155d555614d515d6179cd8d8d55555d61894dcd91cd5d815d7d71515551858d5502027d5dbd8145494d7dc16555d955e58575657d61e16d6da1597d0202692a05fdfd6dd9fd61d56d61496dbd455df1f9916545556d550d05b5f90252461f05b71de202e60205b905bb1d915e021d07ca021d36033a03230101011107011107051d914e020f05bd1107091db602ba021d43f2021d3d0a021d2f7a021d2f92021101d0ffffff3f11017d05bf05c11d63ae021d6bbb1d4dc11dc3c503011d53ef05c31d3d0e0211010505c51d070e031d220326031d6bbd230103090000000005c71d07e51d07e705c91d07f31d07f51d0706021d892e0205cb1101011d2f860205cd1d43ee021d43f60205cf05d11d4dbf05d31d07e91107411d53ed1107211d53f11d7d120205d51107251d7d1e021d3d22021d3d26021d892a0205d71d0742021d0746021d074a0205d90d0f1d075a021d07720223010309020000001d2f82021d63be021d07ce021101091101111303d08e2aee0f05db1d1a031e031d2e0332031d4a034e030303b11905dd0303b51905df0d1305e1172d5501172d5b011703b5011703bb0105e3172d7101110b05110b0204110142410b6903cf096f0307d319d519d7d905e505e705e9230107198000000001000000010000000109393939390d1505eb1d4de31703b9011703dd011703df011703ed011101411709a6040117099e04011709b604011703f5011703f7011df9020205ed2361726974682e6f766572666c6f773c6e6f6e653e002361726974682e666173746d6174683c6e6f6e653e00236e76766d3c7368666c5f6b696e642062666c793e00171b53011703020201171b7a0201171bb20201171baf011101024005ef171bad01171bce0201171bd20201172d7d01172d81011101024105f11d073e0217031a02011703320201170336020117033a0201175d4a15011d07560217033e02011703460201175d5215011d07660217035202011d076e0217035a020117036e02012301051100000000010000001709960301230103090100000017099a030117099203011d2f8e0217098e03011709b203011d079a0217038602011d07a20217038a02011d63aa021709e603011709ea030125110580ff05f3175db619011709fa0301110d0011050017039a020117039e02011d07d6021703aa02011303011303100000e03f05f517ea02390105f71709cf011709d1011709d301110121030302035a0305f91d430a031709d701170356030105fb130310865ccc0f05fd170372030105ff1709d5010502020506021703b60201050a021709fe03011d42034603050e02170382020105120217035e020123766563746f722e6b696e643c6d6178696d756d663e0023766563746f722e6b696e643c6164643e00236c6c766d2e6c6f6f705f616e6e6f746174696f6e3c756e726f6c6c203d203c66756c6c203d20747275653e3e000102020b010901020427032103030141072703210f050947595b1701050947595b6d01216770752e6173796e632e746f6b656e0021637574652e696e745f7475706c653c223f223e0021637574652e73686170653c2231223e0021637574652e73686170653c2238223e0021637574652e696e745f7475706c653c22283f2c3f7b6469763d387d29223e0021637574652e696e745f7475706c653c223f7b6469763d387d223e0021637574652e7374726964653c2231223e0021637574652e73686170653c223f223e0021637574652e6c61796f75743c22283f2c3136293a2831362c3129223e0021637574652e73686170653c223136223e0021637574652e696e745f7475706c653c2238223e0021637574652e7374726964653c223136223e0021637574652e73686170653c22283f2c313629223e0021637574652e6c61796f75743c222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e7074723c626631362c20676d656d2c20616c69676e3c31363e3e0021637574652e7374726964653c222831362c3129223e0021637574652e7074723c626631362c20726d656d2c20616c69676e3c31363e3e0021637574652e7074723c626631362c20736d656d2c20616c69676e3c31363e3e0021637574652e6c61796f75743c22383a31223e0021637574652e73686170653c222828382c31292c312c3129223e0021637574652e636f6f72643c2230223e0021637574652e636f6f72643c223f223e0021637574652e636f6f72645f74656e736f723c22283f2c3f7b6469763d387d29222c202228293a2829223e0021637574652e696e745f7475706c653c2231223e0021637574652e6d656d7265663c626631362c20676d656d2c20616c69676e3c31363e2c2022283f2c3136293a2831362c3129223e0021637574652e696e745f7475706c653c2230223e0021637574652e6c61796f75743c22283f293a283129223e0021637574652e73686170653c22283f29223e0021637574652e7374726964653c22283129223e0021637574652e696e745f7475706c653c22313238223e0021637574652e6c61796f75743c222838293a283129223e0021637574652e73686170653c222828382c3136292c28382c312929223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c31363e2c202228382c31293a28312c3029223e0021637574652e6d656d7265663c6936342c20676d656d2c2022283f293a283129223e0021637574652e6d656d7265663c6633322c20676d656d2c2022283f293a283129223e0021637574652e7074723c6936342c20676d656d3e0021637574652e7074723c6633322c20676d656d3e0021637574652e73686170653c222831362c363429223e0021637574652e696e745f7475706c653c2231303234223e0021637574652e7074723c6936342c20736d656d2c20616c69676e3c313032343e3e0021637574652e73686170653c22283829223e0021637574652e6d656d7265663c626631362c20726d656d2c20616c69676e3c31363e2c202228382c31293a28312c3029223e0021637574652e7374726964653c2228283132382c31292c2831362c313032342929223e0021637574652e6c61796f75743c222828382c3136292c28382c3129293a28283132382c31292c2831362c313032342929223e0021637574652e73686170653c2228312c312c3129223e0021637574652e6c61796f75743c2228312c312c31293a28312c302c3129223e0021637574652e696e745f7475706c653c22283829223e0021637574652e696e745f7475706c653c222828382c31292c312c3129223e0021637574652e6c61796f75743c2228382c31293a28312c3029223e0021637574652e7374726964653c22313238223e0021637574652e7374726964653c2231303234223e0021637574652e6936343c64697662792031363e0021637574652e7074723c69382c20736d656d2c20616c69676e3c313032343e3e0021637574652e7074723c626631362c20736d656d2c20616c69676e3c313032343e3e0021637574652e696e745f7475706c653c2234223e0021637574652e636f6f72645f74656e736f723c22283f2c3f7b6469763d387d29222c20222828382c31292c312c31293a28283140312c30292c302c3029223e0021637574652e7074723c69382c20726d656d2c20616c69676e3c33323e3e0021637574652e636f6f72643c2228302c302c3029223e0021637574652e6d656d7265663c626631362c20726d656d2c20616c69676e3c31363e2c20222838293a283129223e0021637574652e7074723c6633322c20726d656d2c20616c69676e3c33323e3e0021637574652e73686170653c2232223e0021637574652e74696c653c22383a31223e0021637574652e74696c653c2231363a31223e0021637574652e6c61796f75743c222831362c3634293a28312c313629223e0021637574652e636f6f72645f74656e736f723c2228302c3029222c2022283f2c3136293a283140302c31403129223e0021637574652e696e745f7475706c653c2228302c3029223e0021637574652e636f6f72643c2228302c3029223e0021637574652e6d656d7265663c626631362c20676d656d2c20616c69676e3c31363e2c20222831362c3634293a2831362c3129223e0021637574652e636f6f72643c22283f2c3029223e0021637574652e636f6f72645f74656e736f723c22283f7b6469763d31367d2c3029222c20222831362c3634293a283140302c31403129223e0021637574652e696e745f7475706c653c22283f7b6469763d31367d2c3029223e0021637574652e696e745f7475706c653c223f7b6469763d31367d223e0021637574652e696e745f7475706c653c2228312c3029223e0021637574652e6c61796f75743c222831362c3634293a2836342c3129223e0021637574652e696e745f7475706c653c2232303438223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c313032343e2c20222831362c3634293a2836342c3129223e0021637574652e73686170653c2228342c28312c31292c3129223e0021637574652e696e745f7475706c653c2228312c302c3229223e0021637574652e6c61796f75743c2228342c28312c31292c31293a28312c28302c30292c3029223e0021637574652e696e745f7475706c653c223332223e0021637574652e7074723c69382c20736d656d2c20616c69676e3c33323e3e0021637574652e6d656d7265663c6936342c20736d656d2c20616c69676e3c313032343e2c202228342c28312c31292c31293a28312c28302c30292c3029223e0021637574652e74696c653c225b31363a313b36343a315d223e0021637574652e74696c65645f636f70793c21637574655f6e766770752e61746f6d2e73696d745f6173796e635f636f70793c626631362c206361636865203d20616c776179732c2031323820623e2c206c61796f75745f636f70795f7476203d203c222828382c3136292c28382c3129293a28283132382c31292c2831362c313032342929223e2c2074696c65725f6d6e203d203c225b31363a313b36343a315d223e3e0021637574652e6d656d7265663c626631362c20676d656d2c20616c69676e3c31363e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c31363e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e636f6f72643c222828302c5f292c5f2c5f29223e0021637574652e636f6f72645f74656e736f723c22283f2c3f7b6469763d387d29222c202228312c312c31293a28302c302c3029223e0021637574652e6d656d7265663c626631362c20726d656d2c20616c69676e3c31363e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e7374726964653c2228312c302c3129223e0021637574652e6d656d7265663c69382c20726d656d2c20616c69676e3c33323e2c202228312c312c31293a28312c302c3129223e0021637574652e636f6f72643c222828302c30292c302c3029223e0021637574652e636f6f72643c223f7b6469763d387d223e0021637574652e636f6f72643c223136223e0021637574652e636f6f72643c2228285f2c30292c302c3029223e0021637574652e6d656d7265663c626631362c20736d656d2c20616c69676e3c31363e2c20222838293a283129223e0021637574652e636f6f72643c225f223e0021637574652e636f6f72643c22285f2c5f2c3029223e0021637574652e6d656d7265663c6936342c20736d656d2c20616c69676e3c313032343e2c202228342c28312c3129293a28312c28302c302929223e0021637574652e6d656d7265663c6633322c20726d656d2c20616c69676e3c33323e2c20222828382c31292c312c31293a2828312c30292c302c3029223e0021637574652e6c61796f75743c2228342c28312c3129293a28312c28302c302929223e0021637574652e73686170653c2228342c28312c312929223e0021637574652e73686170653c2234223e0021637574652e636f6f72643c2228302c3f29223e0021637574652e636f6f72643c2228285f2c30292c5f2c3029223e0021637574652e73686170653c2228382c3129223e0021637574655f6e766770752e61746f6d2e756e6976657273616c5f636f70793c626631362c2031323820623e0021637574655f6e766770752e61746f6d2e73696d745f6173796e635f636f70793c626631362c206361636865203d20616c776179732c2031323820623e0004da6105015101af010704b261030109035001030704f6570301050751e1d1050704c65703ba09f610098db1b5d9000d0601033303010d0601035d03030d0601035f03050d0601033303010d0601035d03030d0601035f030511060103270301130601032f03150b06010525290317190601031903190f4601070301031d170601033503150b0601052d230321110601034b0303130601034d03270b0601032503291906010319032b0f4601070301032d170601034f03270b060103230331110601034b0305130601034d03350b060103250337190601031903390f4601070301033b170601034f03350b06010323033f130601035503070b0601091d291d1b0343170601036b03070b06010979232d7b034d83424f07030185424f07030187424f0703018942510703018b42510703018d425107030111060103270301130601032f03630b06010525290365190601031903670f4601070301036b1b0671032f036b5906710397036f0d0601039903710b060105494903736342010903016b46010b0301055d797306010307037b110601032703011706010335037f0b0601052d2303816342010d03076b46010b0307057d876342010f03076946010b030705898b6946010b0307058d8b3d06750307030f6b46010b0307058f8763420111030775060103070593956946010b03070591973f063b037d039941063b0333039b110601032703012706790347059d9f0d0601033303a11b02550361150255039b43465513039d07a1a5a70d0601033303a91b02570361150657039f035d4346571303a10771adaf0d060103a303b10b060105a54903b30f460107030103b59502f7037f1b0259036121025903a745065903a905bdbf150223033f470623034905c3c10b0623034903c52f463f15036303c10b063f036303c921020103ab490601037f05bbcd93027b030163420117030165460119030505d1d39744811b03d54b0683038103bb27068503ad05d7c10d0601038103d91d46871d035103070b0687035103dd130601035503070b0601091d291d1b03e11b025b03af21025b03b145065b03b305ebed150223033f470623034905f1ef0b0623034903f32f463f15038303ef0b063f038303f721020103b549060103b705cffb93027b03016342011f030165460119030505ff0202974481210306024b0683036503cf27068503b9050a02ef0d06010365030e0231023a0203ed2d020103bb5b060103bd03160215068b0341035733068b03bf071e02a922020d0601033303260215068d034103575d068d03c1071e02d92e020d0601033903320215068f0341035733068f0385071e02b13a020d0601031f033e020b06010519210342020f46010703010346020f4601070301034a0215021703c31f061703c5053e0256020d0601031f035a020b0601051921035e020f46010703010362020f46010703010366020d0601031f035a020b06010519210372020f46010703010376020f4601070301037a024d4652022303c70326020d060103370386020d060103370386021d46951d035103070b0695035103920215020b033f1f060b0343055a029a020d0601031f039e020b060105192103a2020f460107030103a6020f460107030103aa020d0601031f039e020b060105192103b6020f460107030103ba020f460107030103be020d066202031f039e020b060105192103ca020f460107030103ce020f460107030103d20265460125030505d6026d65460125030505d6026d15020b033f1f060b0343055a02e6020d0601031f03ea020b060105192103ee020f460107030103f2020f460107030103f6020d0601031f03ea020b06010519210302030f46010703010306030f4601070301030a030d066a02031f03ea020b06010519210316030f4601070301031a030f4601070301031e036342012703016546010f03050526032a03670601030103e2026546012903050532032a03670601030103e2026706010301032e036d060103010736033e033a0363420127030165460129030505420346039b16010301034a03090307111506ad034103ce022906ad03070503ba097d0601030103be0999040103c209030105990401034603150697034103573306970385071e02b152030d0601031f0356030b0601051921035a030f4601070301035e030f46010703010362031d46252b03450356030b06250345036e031d46252d03450356030b062503450376031d46252f03450356030b06250345037e031d469b2f03450356030b069b03450386031b0261036f3b026103c9234661310371058e0392034f068a0203cb0396030d06010387039a030d06010387039a031106010371039a03130601036f03a6030b0601071b1b1b03aa031106010371039a03130601036f03ba030b0601071b1b1b03be0315020b03cd1f060b0343055603ce030d0601031f03d2030b060105192103d6030f460107030103da030f460107030103de030d0601031f03d2030b060105192103ea030f460107030103ee030f460107030103f2030d0627031f03d2030b060105192103fe030f46010703010302040f460107030103060415062703cf03060415022703d15f062703050512041604670601030d031a041502270389350427079a0322041e0465460125030505d6026d9b14010326040903010937043e03091602260232029a03990001018f00960291409e022715021703d31f061703d50532022a040d06010339032e040d06010339032e044d46a60223038b032e040d06010337033a040d06010337033a041d463115032b033a040b0631032b0346041106010353033a041306010367034e040b0601031d0352042102310373610631032b035a040b0631032b035e0463420133031115021703d71f0617038b053a046a040d06010337036e040d06010337036e041106010353036e041306010367037a040b0601031d037e041106010353036e0413060103670386040b0601031d038a0421021f03731d461f15032b0392040b061f032b03960421021f03731d461f15032b039e040b061f032b03a20451441f350566046e041106010331033202130601033d03aa040b0601091d1b1b1b03ae041106010331033202130601033d03c2040b0601091d1b1b1b03c60415029d038929069d030d059a03da0463420137030d65460129030505de04e2046342013903056546010f030505e604ea049b140103ee0409035dbd15021703e71f06170357053202ba090d0601033903be090d0601033903be091106010353033a04130601036703ca090b0601031d03ce09110601037703be0913060103e903d6090b0601051d1b03da091106010353033a04110601037703be0953060f033b03ea092b060f033b05e609ee0955060f033b03f209130601031d03f6090b0601031d03fa09170601032303f6090b0601032303020a130601031d03f6090b0601031d030a0a130601031d03f6090b0601031d03120a2b060f033b05ee09f6091d460f15032b031a0a0b060f032b031e0a1106010353033a04110601037703be0925060f0369053a041a0a0d06010337032e0a0d06010337032e0a25060f035705be091a0a0d06010339033a0a0d06010339033a0a1b020f031d23460f3b033b03460a25060f0369052e0a4a0a0d06010337034e0a0d06010337034e0a1b020f031d23460f3b033b035a0a25060f0357053a0a5e0a0d0601033903620a0d0601033903620a31020f03eb37040f076e0a4e0a620a990001011106010331033202130601033d03f2040b0601091d1b1b1b03f6041106010331038602130601033d030a050b0601091d1b1b1b030e051106010331033202110601033103860253060d033b0326052b060d033b0522052a0555060d033b032e05130601031d0332050b0601031d03360517060103230332050b06010323033e05130601031d0332050b0601031d034605130601031d0332050b0601031d034e052b060d033b052a0532051d460d15032b0356050b060d032b035a051106010331033202110601033103860225060d035705320256050d06010339036a050d06010339036a0525060d036905860256050d060103370376050d060103370376051b020d031d23460d3b033b03820525060d0357056a0586050d06010339038a050d06010339038a051b020d031d23460d3b033b03960525060d03690576059a050d06010337039e050d06010337039e0531020d03eb37040d07aa058a059e051106010331038602130601033d03ae050b0601091d1b1b1b03b20557469f3503110386021106010331038602130601033d03ca050b0601091d1b1b1b03ce0577469f07030903c60565460125030505d6026d65460125030505d6026d15020b033f1f060b0343055a02ee050d0601031f03f2050b060105192103f6050f460107030103fa050f460107030103fe050d0601031f03f2050b0601051921030a060f4601070301030e060f46010703010312060d06d202031f03f2050b0601051921031e060f46010703010322060f46010703010326066546010f0305052e062a03670601030103ea056546012903050536062a03670601030103ea0567060103010332066d06010301073a0642063e066546012903050546064603110601032703a1130601032f034e060b060105252903520619060103190356060f4601070301035e061706010335034e060b0601052d230366066342013d0303110601032703a1130601032f0376060b0601052529037a061906010319037e060f460107030103860617060103350376060b0601052d23038e069b1601054703034a06090367b50d0601033303a1110601032703a1130601032f03be090b060105252903c209190601031903c6090f460107030103ce09170601033503be090b0601052d2303d609730601030703d60211060103270301170601033503e6090b0601052d2303ea096342010d03076b46010b030705e209f6096342010f03076946010b030705fa09fe096946010b030705020afe093d06750307030f6b46010b030705060af6096342011103077506010307050e0a120a6946010b0307050a0a160a3f063b037d031a0a41063b0333031e0a11060103270301270679034705220a260a0d06010333032a0a1506ab03e5034e032906ab030f052a0a320a77460107030303360a1106010327032a0a130601032f033e0a0b060105252903420a190601031903460a0f4601070301034e0a1706010335033e0a0b0601052d2303560a1106010327032a0a130601032f03620a0b060105252903660a1906010319036a0a0f460107030103720a170601033503620a0b0601052d23037a0a990401052a0a3a0a03395d0d0601033303a1110601032703a1130601032f03be090b060105252903c209190601031903c6090f460107030103ce09170601033503be090b0601052d2303d609110601032703a1130601032f03e2090b060105252903e609190601031903ea090f460107030103f209170601033503e2090b0601052d2303fa09110601032703a1130601032f03060a0b0601052529030a0a1906010319030e0a0f460107030103160a170601033503060a0b0601052d23031e0a99040105a172060d06010333039a060d06010333039a061106010327039a06130601032f03aa060b060105252903ae06190601031903b2060f460107030103ba06170601033503aa060b0601052d2303c206130601035503070b0601091d291d1b03ce0615021703d91f061703db050e02e2060d0601036503e6060d0601036503e6066342013f03039f460141030305e205f2066342054303016342054503016342054703017f460549030309fa06f606fe0602078146054b030305f60606076342054303016342054d03016342054703017f4605490303090e070a07120716078146054b0303050a071a076342054303016342054f03016342054703017f46054903030922071e0726072a078146054b0303051e072e07634201510303a10601030903360771460153030905e2053a076342015103037146015303030532074207a106010309034607794601530309053e074a071b0265033d2346653b03310352074f066503dd0356070d0601038d035a070d0601038d035a071106010331035a07130601033d0366070b0601091d1b1b1b036a071106010331035a07130601033d037e070b0601091d1b1b1b03820721022103751d462115032b0396070b0621032b039a0721022103751d462115032b03a2070b0621032b03a60751442135054e075a0721026703751d466715032b03ae070b0667032b03b2076342015503016342014503019d1501fe02074603ba07be0705030b1b030100150647034103ba092906470303055a07be09a3460157030303c209150647034103ba09350447075a07ca09c6099900011106010331035a07130601033d03c2070b0601091d1b1b1b03c60757460603350309035a071106010331035a07130601033d03de070b0601091d1b1b1b03e2079f460159030305da0772066342054303016342054503016342054703017f460549030309fa07f607fe0702086f4601530303050608f6076342054303016342054d03016342054703017f4605490303090e080a08120816086f4601530303050a081a086342054303016342054f03016342054703017f46054903030922081e0826082a086f4601530303051e082e0811060103df03e60613060103e10336080b060107e31b1b033a0815020b033f1f060b0343055a024a080d0601031f034e080b06010519210352080f46010703010356080f4601070301035a080d0601031f034e080b06010519210366080f4601070301036a080f4601070301036e080d0645031f034e080b0601051921037a080f4601070301037e080f46010703010382086546010f0305058a082a0315020b033f1f060b0343055a0292080d0601031f0396080b0601051921039a080f4601070301039e080f460107030103a2080d0601031f0396080b060105192103ae080f460107030103b2080f460107030103b6080d0645031f0396080b060105192103c2080f460107030103c6080f460107030103ca086546010f030505d2082a0365460125030505d6026d670601030103d60865460129030505de082a03670601030103d608670601030103da086d0601030107e208ea08e60865460129030505ee08460315020b033f1f060b0343055a02f6080d0601031f03fa080b060105192103fe080f46010703010302090f46010703010306090d0601031f03fa080b06010519210312090f46010703010316090f4601070301031a090d0645031f03fa080b06010519210326090f4601070301032a090f4601070301032e096546010f03050536092a0315020b033f1f060b0343055a023e090d0601031f0342090b06010519210346090f4601070301034a090f4601070301034e090d0601031f0342090b0601051921035a090f4601070301035e090f46010703010362090d0645031f0342090b0601051921036e090f46010703010372090f46010703010376096546010f0305057e092a0365460125030505d6026d6706010301038209654601290305058a092a03670601030103820967060103010386096d06010301078e0996099209654601290305059a0946036706010301039e0965460129030505a2092a036706010301039e096342014503016d0601030107a609ae09aa0965460129030505b20946039b140103b60909030d21a346015b03030332086342015d030371460153030305ba09be096f4601530303053207c20979460153030305c6099e061506a9034103ce023504a90705ce09ca0999000101090001075101b35f07046e0903c19602098db1b52d000d0601033303010d0601035d03030d0601035f03050d0601033303010d0601035d03030d0601035f030511060103270301130601032f03150b06010525290317190601031903190f4601070301031d170601033503150b0601052d230321110601034b0303130601034d03270b0601032503291906010319032b0f4601070301032d170601034f03270b060103230331110601034b0305130601034d03350b060103250337190601031903390f4601070301033b170601034f03350b06010323033f1b0233038f2d02330391390633031b0543450b0633031b03471b024903553b0249036b23464931036d054b4d1d466d1d0351034f0b066d0351035111060103270301130601032f03550b06010525290357190601031903590f4601070301035d1b06350325035d2d0235039339063503250561630b063503250365190601031903670f460107030103691b023703612346373b0395036d2f4637150363036f0b06370363037111060103270301130601032f03750b06010525290377190601031903790f4601070301037d170601033503750b0601052d230381110601034b0303130601034d03870b0601032503891906010319038b0f4601070301038d170601034f03870b060103230391110601034b0305130601034d03950b060103250397190601031903990f4601070301039b170601034f03950b06010323039f1306010355034f0b0601091d291d1b03a3170601036b034f0b06010979232d7b03ad7b0601030b036b63420161030b63420163030b6342016503010546016703171907b7b9b9bbb9b9bd0103054f0900010603010501009e2916021b1b1d1b371b1b372171190b06030603130f1b171929db2d2b0b193b1322021f1113f325130d21198112026f0f5717151509070d0f252f292d2d2d2d2929290b150f170b0b170d0b0b0f0b0b0d0b131d152f212b21131d231d271917112917130f1319130b1b2f0b0f151919151f191f0d0b171b171715171913170f190f0b0f0907170b0d0b0b09116275696c74696e006770750066756e630063757465006172697468006e76766d00637574655f6e766770750063660073636600766563746f72006c6c766d006d6f64756c65006c61756e63685f66756e630072657475726e006765745f6c6561766573006765745f69746572006765745f7363616c617273006765745f6c61796f7574006765745f7368617065006d616b655f636f6f7264006765745f73747269646500746f5f696e745f7475706c65006d616b655f73686170650073697a6500736c696365006d616b655f696e745f7475706c65006d616b655f6c61796f7574006c6f676963616c5f646976696465006d616b655f76696577006d656d7265662e6c6f616400636f6d706f736974696f6e006d616b655f74696c6500636f73697a650061746f6d0074696c65642e636f70792e706172746974696f6e5f53006d656d7265662e73746f726500636f7079006365696c5f646976006d616b655f73747269646500707472746f696e7400617373756d6500696e74746f707472006c6f63616c5f74696c65006d616b655f6f7264657265645f6c61796f75740063726432696478006164645f6f6666736574007265636173745f69746572006d616b655f667261676d656e745f6c696b65006d656d7265662e616c6c6f6361006d656d7265662e73746f72655f7665630072696768745f696e766572736500636f616c65736365006d656d7265662e6c6f61645f766563006d616b655f6964656e746974795f74656e736f72006d616b655f74696c65645f636f70790074696c65642e636f70792e706172746974696f6e5f4400656c656d5f6c657373007475706c652e70726f6475637400636f6e7374616e7400636d70690065787475690061646469006d756c690073656c6563740061646466006d756c6600657874736900666c6f6f7264697673690065787466007375626600696e6465785f63617374007472756e6369007368666c2e73796e6300666d617800726561642e7074782e737265672e7469642e7800726561642e7074782e737265672e7469642e7900726561642e7074782e737265672e7469642e7a00726561642e7074782e737265672e63746169642e7800726561642e7074782e737265672e63746169642e7900726561642e7074782e737265672e63746169642e7a0063702e6173796e632e636f6d6d69742e67726f75700063702e6173796e632e776169742e67726f757000617263682e6765745f64796e5f736d656d5f73697a6500617263682e6765745f64796e5f736d656d00617373657274007969656c6400696600666f7200726564756374696f6e0062726f61646361737400696e6c696e655f61736d002f686f6d652f6a65726f6d656b752f6375746c6173732f717561636b2d73616e64626f782f63652e7079006b65726e656c002f686f6d652f6a65726f6d656b752f6375746c6173732f746869726470617274792f717561636b2f717561636b2f7574696c732e7079002f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f707974686f6e5f7061636b616765732f6375746c6173732f7574696c732f736d656d5f616c6c6f6361746f722e7079002f686f6d652f6a65726f6d656b752f6375746c6173732f746869726470617274792f717561636b2f717561636b2f726564756374696f6e5f626173652e7079007072656469636174655f6b00616c6c6f636174655f74656e736f72006578703266005f5f63616c6c5f5f00646f6d61696e5f6f66667365745f693634002f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f707974686f6e5f7061636b616765732f6375746c6173732f637574652f636f72652e70790066696c6c5f6f6f62006b65726e656c73005f6765745f74765f6c61796f7574006b65726e656c5f6375746c6173735f6b65726e656c5f5f5f6d61696e5f5f43726f7373456e74726f70795f6f626a6563745f61745f5f74656e736f7270747262663136676d656d616c69676e31366f31363136315f74656e736f72707472693634676d656d6f315f74656e736f72707472663332676d656d6f315f4e6f6e655f31365f36345f3000616c6c6f63617465005f6765745f726564756374696f6e5f6275666665725f6c61796f7574005f5f6765746974656d5f5f003d662c66006770752e636f6e7461696e65725f6d6f64756c65006c6c766d2e656d69745f635f696e74657266616365006375746c6173735f5f5f63616c6c5f5f5f5f5f6d61696e5f5f43726f7373456e74726f70795f6f626a6563745f61745f5f54656e736f72676d656d6f31363136315f54656e736f72676d656d6f315f54656e736f72676d656d6f315f4e6f6e655f435573747265616d307830005f736d656d5f73697a655f696e5f627974657300637574652e6b65726e656c006770752e6b65726e656c006e76766d2e7265716e746964007075626c6963005f5f696e69745f5f00416c6c6f636174696f6e206661696c65643a20736861726564206d656d6f727920616c6c6f636174696f6e206578636565647320617661696c61626c65206d656d6f72792073657420696e206b65726e656c206c61756e63682e20416c6c6f63617465642062797465733a20323034382062797465732e20506c65617365207265647563652074686520616c6c6f636174696f6e206f72207365742061206c617267657220736d656d2073697a6520696e206b65726e656c206c61756e63682e00416c6c6f636174696f6e206661696c65643a20736861726564206d656d6f727920616c6c6f636174696f6e206578636565647320617661696c61626c65206d656d6f72792073657420696e206b65726e656c206c61756e63682e20416c6c6f63617465642062797465733a20323038302062797465732e20506c65617365207265647563652074686520616c6c6f636174696f6e206f72207365742061206c617267657220736d656d2073697a6520696e206b65726e656c206c61756e63682e0066696c6c00776172705f726564756365002f686f6d652f6a65726f6d656b752f6375746c6173732f746869726470617274792f717561636b2f717561636b2f7265647563652e7079006c6f6f705f616e6e6f746174696f6e006c67322e617070726f782e66747a2e6633322024302c2024313b007468656e5f626c6f636b5f37006c6f6f705f626f64795f3232006578322e617070726f782e66747a2e6633322024302c2024313b007468656e5f626c6f636b5f35007468656e5f626c6f636b5f3131007468656e5f626c6f636b5f33007468656e5f626c6f636b5f310008da026905010107016901116e03dd01016f7e03030103eb05ee030373031303770f0101010d0303030323051602037f051a020397053202053602054e02031d035f031505ee0405fe040566020709030305b202033305c20205c6020707010305da0205de0209f603520303290341032b05ff010701010103a103a303a505f60305fa020f272a03a733010109f60356030f271203a70101010516030d01b70101b90103c703c903cb1fcd3503030303030303010101030901435554455f44534c46616c736546616c736546616c7365547275655472756554727565313046616c7365736d5f39306146616c736546616c736546616c736546616c736531303030547275652f7573722f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f6c69622f6c69626d6c69725f72756e6e65725f7574696c732e736f3a2f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f6c69622f6c69626d6c69725f637564615f72756e74696d652e736f3a2f686f6d652f6a65726f6d656b752f6375746c6173732f2e6375746c6173732d656e762f6c69622f707974686f6e332e31322f736974652d7061636b616765732f6e76696469615f6375746c6173735f64736c2f6c69622f6c69626d6c69725f635f72756e6e65725f7574696c732e736f6f70742d6c6576656c3d3320656e61626c652d6465766963652d617373657274696f6e733d66616c7365]
2025-09-04 15:32:24,012:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1052 [get_module_hash]: Version=[b04498592e3697b362fdd476b243e580ca4dd1d86abb8910f56663ecc58ebc0f]
2025-09-04 15:32:24,012:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1053 [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:32:24,017:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:32:24,018:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1014 [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:32:24,018:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1158 [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:32:24,069:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/jit_executor.py:268 [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:32:24,073:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:293 [load_cubin_module_data]: cuModuleLoadData 285124432
2025-09-04 15:32:24,074:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:304 [get_kernel_function]: cuModuleGetFunction <CUmodule 0x10fcd150> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:32:24,074:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:308 [get_kernel_function]: <CUfunction 0x10ed4810> <-- cuModuleGetFunction
2025-09-04 15:32:24,074:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:39:46,222:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:141 [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 15:39:46,224:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 15:39:49,961:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:39:49,961:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:359 [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:39:49,961:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:360 [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:39:49,961:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,961:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,963:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,963:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,966:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,966:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,966:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,966:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,968:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:49,969:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:50,011:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:50,012:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:50,012:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:50,012:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:50,012:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:50,287:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:39:50,287:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:39:50,288:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:39:50,294:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:39:50,295:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:39:50,295:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1399 [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:871 [generate_mlir_function_types]: Execution Arguments: 1249487344, 1249505072, 1249506640, 129970309423584
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:872 [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:39:50,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1110 [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:39:50,298:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:39:50,298:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,298:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,298:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,298:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:39:50,298:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:39:50,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x763511735850>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:39:50,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:39:50,299:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:39:50,301:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:39:50,360:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:39:50,361:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:39:50,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1530 [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:39:50,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:39:50,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:39:50,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:39:50,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:39:50,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1548 [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:39:50,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1549 [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:39:50,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1550 [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:39:50,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1651 [kernel_wrapper]: Generating device kernel
2025-09-04 15:39:50,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:240 [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1670 [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:39:50,363:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:39:50,364:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x763511735850>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:39:50,364:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:39:50,364:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1681 [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x763511735850>, <cutlass.cute.core._Tensor object at 0x7635117c08c0>, <cutlass.cute.core._Tensor object at 0x7635117c06b0>, <cutlass.cute.core._Tensor object at 0x7635117c06e0>, None, <cutlass.cute.core._Layout object at 0x763603320a70>, (16, 64)] ; kwargs: {}
2025-09-04 15:39:50,368:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:39:50,369:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:39:50,371:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:39:50,372:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x7635117c3380>, <cutlass.cute.core._Tensor object at 0x7635117c06b0>]] yield_args [[0]]
2025-09-04 15:39:50,373:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:39:50,373:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:39:50,374:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,374:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:39:50,374:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:39:50,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:39:50,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:39:50,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:39:50,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:39:50,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:39:50,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:39:50,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:39:50,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:39:50,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,379:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:39:50,380:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:39:50,384:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:39:50,385:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x7635117c2c30>, <cutlass.cute.core._Tensor object at 0x763511737110>, <cutlass.cute.core._Tensor object at 0x7635117c2e40>, <cutlass.cute.core._Tensor object at 0x763511778e30>]] yield_args [[]]
2025-09-04 15:39:50,386:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,386:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,386:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,386:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,387:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,387:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:39:50,388:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:39:50,392:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x763511778e30>, 0, 0, <cutlass.cute.core._Tensor object at 0x763511779e20>, <cutlass.cute.core._Tensor object at 0x7635117c2e40>]] yield_args [[]]
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,394:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,395:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,395:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,395:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,395:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:39:50,396:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:39:50,396:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,396:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,398:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x7635117c3380>, <cutlass.cute.core._Tensor object at 0x7635117c08c0>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x763511737650>, 0.0]]
2025-09-04 15:39:50,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:39:50,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:39:50,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:39:50,401:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:39:50,401:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:39:50,402:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:39:50,402:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,402:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:39:50,402:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,403:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:39:50,403:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,403:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:39:50,403:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:39:50,403:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7635117cec70>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:39:50,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7635117cec70>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:39:50,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:39:50,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:39:50,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:39:50,405:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,405:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,405:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:39:50,405:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,406:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:39:50,406:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,406:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:39:50,406:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,406:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:39:50,407:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:39:50,408:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:39:50,408:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:39:50,409:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,409:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:39:50,409:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,409:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:39:50,409:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,409:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:39:50,409:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7635117cec70>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:39:50,410:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7635117cec70>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:39:50,410:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,410:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:39:50,410:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:39:50,410:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:39:50,410:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,410:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,411:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:39:50,411:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,411:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:39:50,411:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,411:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:39:50,411:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,411:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:39:50,412:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:39:50,412:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:39:50,413:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:39:50,413:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,413:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:39:50,413:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:39:50,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:39:50,415:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:39:50,415:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x763511778590>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:39:50,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x763511778590>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:39:50,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:39:50,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:39:50,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:39:50,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:39:50,417:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,417:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:39:50,417:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:39:50,417:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,417:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:39:50,419:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:39:50,425:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:39:50,425:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:39:50,426:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:39:50,428:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:39:50,430:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:39:50,431:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:39:50,434:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:39:50,435:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:204 [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x7635117c1be0>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:39:50,435:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:133 [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:39:50,435:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,435:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,435:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,436:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:263 [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:39:50,436:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:275 [create_for_op]: Pipelining attribute: None
2025-09-04 15:39:50,436:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:277 [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:39:50,438:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:39:50,439:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:321 [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x7635117c1be0>]
2025-09-04 15:39:50,439:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,439:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,439:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,440:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:39:50,440:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:39:50,440:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,440:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,443:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:39:50,448:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x7635117c3380>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x763511735850>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x7635117c06e0>, None]] yield_args [[]]
2025-09-04 15:39:50,449:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,449:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,449:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,449:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:39:50,450:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:39:50,450:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,450:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,450:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:39:50,451:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,451:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:39:50,451:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:39:50,452:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:39:50,452:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,452:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:39:50,452:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1703 [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x7635117cd3f0>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:39:50,457:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:39:50,569:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1051 [get_module_hash]: Bytecode=[]
2025-09-04 15:39:50,569:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1052 [get_module_hash]: Version=[b04498592e3697b362fdd476b243e580ca4dd1d86abb8910f56663ecc58ebc0f]
2025-09-04 15:39:50,569:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1053 [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:39:50,574:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:39:50,575:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1014 [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:39:50,575:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1158 [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:39:50,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/jit_executor.py:268 [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:39:50,636:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:293 [load_cubin_module_data]: cuModuleLoadData 1252245040
2025-09-04 15:39:50,637:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:304 [get_kernel_function]: cuModuleGetFunction <CUmodule 0x4a9cc140> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:39:50,637:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:308 [get_kernel_function]: <CUfunction 0x4a840e00> <-- cuModuleGetFunction
2025-09-04 15:39:50,637:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:39:50,640:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:141 [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 15:39:50,642:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 15:40:28,933:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:40:28,933:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:359 [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:40:28,933:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:360 [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:40:28,933:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,933:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,935:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,935:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,937:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,937:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,938:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,938:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,939:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,939:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,939:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,940:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,941:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,983:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,983:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,983:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,983:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:28,983:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:29,258:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:40:29,258:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:40:29,259:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:40:29,265:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:40:29,266:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:40:29,266:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1399 [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:40:29,267:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:40:29,267:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,267:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,267:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,267:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:40:29,267:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:40:29,268:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:871 [generate_mlir_function_types]: Execution Arguments: 468343424, 468361152, 468362720, 127292140446176
2025-09-04 15:40:29,268:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:872 [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:40:29,268:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1110 [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:40:29,269:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:40:29,269:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,269:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,269:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,269:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:40:29,269:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:40:29,270:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x73c584b97320>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:40:29,270:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:40:29,270:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:40:29,272:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:40:29,327:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:40:29,328:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1530 [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:40:29,328:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:40:29,329:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1548 [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:40:29,329:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1549 [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:40:29,329:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1550 [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:40:29,329:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1651 [kernel_wrapper]: Generating device kernel
2025-09-04 15:40:29,329:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:240 [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:40:29,329:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1670 [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x73c584b97320>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:40:29,330:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1681 [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x73c584b97320>, <cutlass.cute.core._Tensor object at 0x73c582d3f380>, <cutlass.cute.core._Tensor object at 0x73c582dc4e00>, <cutlass.cute.core._Tensor object at 0x73c582dc4ce0>, None, <cutlass.cute.core._Layout object at 0x73c674928a70>, (16, 64)] ; kwargs: {}
2025-09-04 15:40:29,335:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:40:29,336:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:40:29,337:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:40:29,339:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x73c582d3ed50>, <cutlass.cute.core._Tensor object at 0x73c582dc4e00>]] yield_args [[0]]
2025-09-04 15:40:29,340:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:40:29,340:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:40:29,340:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,340:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:40:29,341:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:40:29,341:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,341:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:40:29,341:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,341:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:40:29,342:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:40:29,342:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:40:29,342:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,342:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:40:29,342:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,342:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:40:29,342:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:40:29,343:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:40:29,344:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:40:29,345:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,345:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:40:29,345:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,345:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:40:29,345:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:40:29,345:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:40:29,346:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,346:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:40:29,346:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,346:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:40:29,346:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,346:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:40:29,347:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:40:29,350:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:40:29,352:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x73c582dc5ee0>, <cutlass.cute.core._Tensor object at 0x73c582d3f110>, <cutlass.cute.core._Tensor object at 0x73c582d3e3c0>, <cutlass.cute.core._Tensor object at 0x73c582d3f3b0>]] yield_args [[]]
2025-09-04 15:40:29,352:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,352:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,352:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,352:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:40:29,353:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,354:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,354:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:40:29,354:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:40:29,358:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:40:29,359:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x73c582d3f3b0>, 0, 0, <cutlass.cute.core._Tensor object at 0x73c582d3d880>, <cutlass.cute.core._Tensor object at 0x73c582d3e3c0>]] yield_args [[]]
2025-09-04 15:40:29,360:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,360:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,360:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,360:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:40:29,360:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:40:29,360:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,360:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,361:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:40:29,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:40:29,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,362:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,364:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x73c582d3ed50>, <cutlass.cute.core._Tensor object at 0x73c582d3f380>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x73c582d3ec30>, 0.0]]
2025-09-04 15:40:29,366:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:40:29,366:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,366:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:40:29,366:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,366:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:40:29,367:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:40:29,367:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:40:29,368:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:40:29,368:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,368:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:40:29,368:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,368:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:40:29,368:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,369:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:40:29,369:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:40:29,369:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73c5823cf070>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:40:29,370:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73c5823cf070>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:40:29,370:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,370:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:40:29,370:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:40:29,370:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:40:29,370:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,370:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,371:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:40:29,371:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,372:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:40:29,372:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,372:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:40:29,372:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,372:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:40:29,373:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:40:29,374:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:40:29,374:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:40:29,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:40:29,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:40:29,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:40:29,375:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73c5823cf070>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:40:29,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73c5823cf070>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:40:29,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:40:29,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:40:29,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:40:29,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,376:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:40:29,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:40:29,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:40:29,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,377:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:40:29,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:40:29,378:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:40:29,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:40:29,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:40:29,379:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,380:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:40:29,380:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,380:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:40:29,381:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:40:29,381:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x73c5837c88f0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:40:29,381:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x73c5837c88f0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:40:29,382:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:40:29,382:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:40:29,382:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:40:29,382:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:40:29,382:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,382:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:40:29,382:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:40:29,383:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,383:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:40:29,384:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:40:29,390:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:40:29,391:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:40:29,391:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:40:29,394:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:40:29,395:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:40:29,396:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:40:29,399:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:204 [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x73c582dc66f0>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:133 [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:263 [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:275 [create_for_op]: Pipelining attribute: None
2025-09-04 15:40:29,400:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:277 [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:40:29,403:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:40:29,403:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:321 [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x73c582dc66f0>]
2025-09-04 15:40:29,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,404:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:40:29,405:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:40:29,405:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,405:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,407:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:40:29,412:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x73c582d3ed50>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x73c584b97320>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x73c582dc4ce0>, None]] yield_args [[]]
2025-09-04 15:40:29,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:40:29,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:40:29,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,414:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,415:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:40:29,415:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,415:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:40:29,415:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:40:29,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:40:29,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:40:29,416:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1703 [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73c582db36f0>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:40:29,421:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:40:29,534:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1051 [get_module_hash]: Bytecode=[]
2025-09-04 15:40:29,534:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1052 [get_module_hash]: Version=[b04498592e3697b362fdd476b243e580ca4dd1d86abb8910f56663ecc58ebc0f]
2025-09-04 15:40:29,534:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1053 [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:40:29,539:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:40:29,540:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1014 [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:40:29,540:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1158 [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:40:29,591:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/jit_executor.py:268 [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:40:29,594:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:293 [load_cubin_module_data]: cuModuleLoadData 470821712
2025-09-04 15:40:29,595:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:304 [get_kernel_function]: cuModuleGetFunction <CUmodule 0x1c046d20> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:40:29,595:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:308 [get_kernel_function]: <CUfunction 0x1bf27f70> <-- cuModuleGetFunction
2025-09-04 15:40:29,595:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:41:35,731:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:141 [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 15:41:35,733:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 15:42:50,862:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:42:50,862:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:359 [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:42:50,862:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:360 [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:42:50,862:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,862:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,864:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,864:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,866:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,867:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,867:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,867:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,868:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,869:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,870:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,912:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,912:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,912:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,912:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:50,912:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:51,188:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:42:51,188:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:42:51,189:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:42:51,195:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:42:51,196:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:42:51,196:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1399 [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:871 [generate_mlir_function_types]: Execution Arguments: 862089056, 862106784, 862107216, 127533545742816
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:872 [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:42:51,197:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1110 [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:42:51,198:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:42:51,198:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,199:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,199:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,199:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:42:51,199:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:42:51,199:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x73fdb7b46090>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:42:51,199:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:42:51,200:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:42:51,202:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:42:51,257:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:42:51,258:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1530 [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:42:51,258:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:42:51,259:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1548 [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:42:51,259:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1549 [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:42:51,259:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1550 [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:42:51,259:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1651 [kernel_wrapper]: Generating device kernel
2025-09-04 15:42:51,259:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:240 [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:42:51,259:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1670 [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:42:51,259:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x73fdb7b46090>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:42:51,260:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1681 [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x73fdb7b46090>, <cutlass.cute.core._Tensor object at 0x73fdb7bcdc40>, <cutlass.cute.core._Tensor object at 0x73fdb7bcd220>, <cutlass.cute.core._Tensor object at 0x73fdb7bcdbb0>, None, <cutlass.cute.core._Layout object at 0x73feba130ad0>, (16, 64)] ; kwargs: {}
2025-09-04 15:42:51,265:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:42:51,265:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:42:51,267:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:42:51,269:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x73fdb7bcf380>, <cutlass.cute.core._Tensor object at 0x73fdb7bcd220>]] yield_args [[0]]
2025-09-04 15:42:51,270:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:42:51,270:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:42:51,270:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,270:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:42:51,271:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:42:51,271:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,271:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:42:51,271:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,271:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:42:51,272:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:42:51,273:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:42:51,274:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:42:51,275:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,275:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:42:51,275:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,275:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:42:51,275:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:42:51,275:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:42:51,276:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,276:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:42:51,276:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,276:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:42:51,276:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,276:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:42:51,277:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:42:51,281:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:42:51,282:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x73fdb7bcfd40>, <cutlass.cute.core._Tensor object at 0x73fdb7bcf110>, <cutlass.cute.core._Tensor object at 0x73fdbdf87ef0>, <cutlass.cute.core._Tensor object at 0x73fdb7bce360>]] yield_args [[]]
2025-09-04 15:42:51,283:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,283:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,283:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,283:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:42:51,283:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:42:51,283:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,283:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,284:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,284:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,284:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,284:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:42:51,284:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:42:51,284:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,284:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,284:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:42:51,285:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:42:51,289:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:42:51,290:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x73fdb7bce360>, 0, 0, <cutlass.cute.core._Tensor object at 0x73fdb7b46cc0>, <cutlass.cute.core._Tensor object at 0x73fdbdf87ef0>]] yield_args [[]]
2025-09-04 15:42:51,290:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,290:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,290:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,290:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:42:51,291:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:42:51,291:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,291:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,292:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,292:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,292:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,292:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:42:51,293:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:42:51,293:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,293:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,295:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x73fdb7bcf380>, <cutlass.cute.core._Tensor object at 0x73fdb7bcdc40>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x73feba14cd70>, 0.0]]
2025-09-04 15:42:51,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:42:51,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:42:51,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,296:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:42:51,297:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:42:51,297:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:42:51,298:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:42:51,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:42:51,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:42:51,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,299:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:42:51,300:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:42:51,300:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73fdb8f6d970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:42:51,300:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73fdb8f6d970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:42:51,301:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,302:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:42:51,302:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,303:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:42:51,303:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,303:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:42:51,303:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:42:51,304:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:42:51,304:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:42:51,305:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,305:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:42:51,305:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,305:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:42:51,305:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,305:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:42:51,305:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73fdb8f6d970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:42:51,306:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73fdb8f6d970>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,307:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:42:51,308:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:42:51,308:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:42:51,309:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:42:51,310:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,310:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:42:51,310:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,310:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:42:51,310:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,310:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:42:51,311:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:42:51,311:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x73feba14c980>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:42:51,312:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x73feba14c980>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:42:51,313:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,313:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:42:51,315:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:42:51,322:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:42:51,322:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:42:51,323:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:42:51,325:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:42:51,327:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:42:51,327:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:42:51,331:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:204 [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x73fdb7b47320>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:133 [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:263 [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:275 [create_for_op]: Pipelining attribute: None
2025-09-04 15:42:51,332:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:277 [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:42:51,335:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:42:51,335:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:321 [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x73fdb7b47320>]
2025-09-04 15:42:51,336:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,336:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,336:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,336:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:42:51,337:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:42:51,337:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,337:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,340:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:42:51,345:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x73fdb7bcf380>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x73fdb7b46090>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x73fdb7bcdbb0>, None]] yield_args [[]]
2025-09-04 15:42:51,347:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,347:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,347:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,347:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:42:51,347:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:42:51,347:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,347:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,348:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:42:51,348:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,348:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:42:51,348:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:42:51,349:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:42:51,349:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,349:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:42:51,349:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1703 [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x73fdb8f70f70>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:42:51,355:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:42:51,467:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1051 [get_module_hash]: Bytecode=[]
2025-09-04 15:42:51,467:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1052 [get_module_hash]: Version=[b04498592e3697b362fdd476b243e580ca4dd1d86abb8910f56663ecc58ebc0f]
2025-09-04 15:42:51,467:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1053 [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:42:51,473:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:42:51,474:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1014 [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:42:51,474:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1158 [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:42:51,528:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/jit_executor.py:268 [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:42:51,532:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:293 [load_cubin_module_data]: cuModuleLoadData 864520048
2025-09-04 15:42:51,532:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:304 [get_kernel_function]: cuModuleGetFunction <CUmodule 0x338a6a60> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:42:51,532:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:308 [get_kernel_function]: <CUfunction 0x33731ec0> <-- cuModuleGetFunction
2025-09-04 15:42:51,533:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:42:54,598:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:141 [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 15:42:54,601:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
2025-09-04 15:45:21,223:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:45:21,223:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:359 [__init__]: Initializing CUTE_DSL DSL
2025-09-04 15:45:21,223:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:360 [__init__]: Logger initialized for CUTE_DSL
2025-09-04 15:45:21,223:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,223:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,225:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,225:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,227:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,227:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,228:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,228:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,229:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,229:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,229:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,229:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,229:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,229:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,229:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,230:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,231:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,231:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,231:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,231:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,273:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,273:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,273:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,273:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,273:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,548:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:45:21,548:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [__call__]
2025-09-04 15:45:21,549:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [__call__]
2025-09-04 15:45:21,555:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [__call__]
2025-09-04 15:45:21,556:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0
2025-09-04 15:45:21,556:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1399 [_func]: Generating MLIR for function 'cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0'
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:871 [generate_mlir_function_types]: Execution Arguments: 766820752, 766838480, 766840048, 133157950120416
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:872 [generate_mlir_function_types]: Types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token
2025-09-04 15:45:21,557:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1110 [build_ir_module]: Generated Function OP ["func.func"() <{function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !gpu.async.token) -> (), sym_name = "cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0"}> ({
}) {llvm.emit_c_interface} : () -> ()]
2025-09-04 15:45:21,559:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:45:21,559:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,559:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,559:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,559:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:45:21,559:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [stream : <class 'cuda.bindings.driver.CUstream'>]
2025-09-04 15:45:21,560:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x791b40542210>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, Value(<block argument> of type '!gpu.async.token' at index: 3)
2025-09-04 15:45:21,560:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:45:21,560:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [kernel]
2025-09-04 15:45:21,562:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [kernel]
2025-09-04 15:45:21,617:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [kernel]
2025-09-04 15:45:21,618:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:577 [mangle_name]: Final mangled function name: cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1530 [generate_kernel_operands_and_types]: Processing GPU kernel call in [@jit + @kernel] mode
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [0] Argument [self : None]
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:792 [_generate_jit_func_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:45:21,618:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1548 [generate_kernel_operands_and_types]: Final kernel_operands: Value(<block argument> of type '!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">' at index: 0), Value(<block argument> of type '!cute.memref<i64, gmem, "(?):(1)">' at index: 1), Value(<block argument> of type '!cute.memref<f32, gmem, "(?):(1)">' at index: 2), ((8,16),(8,1)):((128,1),(16,1024))
2025-09-04 15:45:21,619:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1549 [generate_kernel_operands_and_types]: Final kernel_arg_types: !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">
2025-09-04 15:45:21,619:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1550 [generate_kernel_operands_and_types]: Final kernel_arg_attrs: {}, {}, {}, {}
2025-09-04 15:45:21,619:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1651 [kernel_wrapper]: Generating device kernel
2025-09-04 15:45:21,619:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:240 [generate_func_op]: [DictAttr({}), DictAttr({}), DictAttr({}), DictAttr({})]
2025-09-04 15:45:21,619:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1670 [kernel_wrapper]: Kernel function op: "func.func"() <{arg_attrs = [{}, {}, {}, {}], function_type = (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.memref<i64, gmem, "(?):(1)">, !cute.memref<f32, gmem, "(?):(1)">, !cute.layout<"((8,16),(8,1)):((128,1),(16,1024))">) -> (), sym_name = "kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0"}> ({
}) : () -> ()
2025-09-04 15:45:21,620:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [0] Argument [self : None]
2025-09-04 15:45:21,620:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [1] Argument [mX : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,620:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [2] Argument [mTarget : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,620:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [3] Argument [mLoss : <class 'cutlass.cute.typing.Tensor'>]
2025-09-04 15:45:21,620:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [4] Argument [mLSE : typing.Optional[cutlass.cute.typing.Tensor]]
2025-09-04 15:45:21,620:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [5] Argument [tv_layout : <class 'cutlass.cute.typing.Layout'>]
2025-09-04 15:45:21,620:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:612 [gen_exec_args]: Processing [6] Argument [tiler_mn : typing.Union[int, cutlass.base_dsl.typing.Integer, typing.Tuple[ForwardRef('Shape'), ...]]]
2025-09-04 15:45:21,621:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:654 [generate_execution_arguments]: execution args: <__main__.CrossEntropy object at 0x791b40542210>, tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>, tensor<ptr<i64, gmem> o (?):(1)>, tensor<ptr<f32, gmem> o (?):(1)>, None, ((8,16),(8,1)):((128,1),(16,1024)), (16, 64)
2025-09-04 15:45:21,621:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:655 [generate_execution_arguments]: execution kwargs: 
2025-09-04 15:45:21,621:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1681 [kernel_wrapper]: IR arguments - args: [<__main__.CrossEntropy object at 0x791b40542210>, <cutlass.cute.core._Tensor object at 0x791b405cca10>, <cutlass.cute.core._Tensor object at 0x791c42b4c7d0>, <cutlass.cute.core._Tensor object at 0x791b405cc260>, None, <cutlass.cute.core._Layout object at 0x791c42b2ca70>, (16, 64)] ; kwargs: {}
2025-09-04 15:45:21,625:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [_initialize_cluster]
2025-09-04 15:45:21,626:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [_initialize_cluster]
2025-09-04 15:45:21,627:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [_initialize_cluster]
2025-09-04 15:45:21,629:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x791b405cf650>, <cutlass.cute.core._Tensor object at 0x791c42b4c7d0>]] yield_args [[0]]
2025-09-04 15:45:21,630:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:45:21,630:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'int'>] 0
2025-09-04 15:45:21,631:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,631:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:45:21,631:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: 0
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%259 = "scf.if"(%258) ({
^bb0:
}, {
^bb0:
}) : (i1) -> i32]
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,632:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:45:21,633:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%262 = "arith.trunci"(%261) : (i64) -> i32)
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)]
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (1)
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:Int32] ?
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,634:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:45:21,635:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32)
2025-09-04 15:45:21,635:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,635:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: ?
2025-09-04 15:45:21,635:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,635:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32]
2025-09-04 15:45:21,635:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (1)
2025-09-04 15:45:21,635:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [ArithValue(%259 = "scf.if"(%258) ({
  %260 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %261 = "cute.memref.load"(%arg5, %260) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %262 = "arith.trunci"(%261) : (i64) -> i32
  "scf.yield"(%262) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32)]
2025-09-04 15:45:21,636:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,636:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'int'>
2025-09-04 15:45:21,636:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,636:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: ?
2025-09-04 15:45:21,636:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,636:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [predicate_k]
2025-09-04 15:45:21,637:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [predicate_k]
2025-09-04 15:45:21,641:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [predicate_k]
2025-09-04 15:45:21,642:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core.CopyAtom object at 0x791b405432c0>, <cutlass.cute.core._Tensor object at 0x791b405435f0>, <cutlass.cute.core._Tensor object at 0x791b405cef90>, <cutlass.cute.core._Tensor object at 0x791b40542a50>]] yield_args [[]]
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%305) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,643:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%305) ({
  "cute.copy"(%190, %194, %197, %277) : (!cute_nvgpu.atom.simt_async_copy<bf16, cache = always, 128 b>, !cute.memref<bf16, gmem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.memref<i8, rmem, align<32>, "(1,1,1):(1,0,1)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:45:21,644:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:45:21,644:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,644:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,644:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [fill_oob]
2025-09-04 15:45:21,644:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [fill_oob]
2025-09-04 15:45:21,649:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [fill_oob]
2025-09-04 15:45:21,650:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x791b40542a50>, 0, 0, <cutlass.cute.core._Tensor object at 0x791b405ccec0>, <cutlass.cute.core._Tensor object at 0x791b405cef90>]] yield_args [[]]
2025-09-04 15:45:21,650:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,650:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,650:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,650:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%349) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:45:21,651:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:45:21,651:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,651:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,652:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,652:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,652:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,652:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%349) ({
  %350 = "cute.make_coord"() : () -> !cute.coord<"((_,0),_,0)">
  %351 = "cute.slice"(%197, %350) : (!cute.memref<bf16, smem, align<16>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"((_,0),_,0)">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %352 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %353 = "cute.get_iter"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %354 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %355 = "cute.get_shape"(%354) : (!cute.layout<"(8):(1)">) -> !cute.shape<"(8)">
  %356 = "cute.get_leaves"(%355) : (!cute.shape<"(8)">) -> !cute.shape<"8">
  %357 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %358 = "cute.get_shape"(%357) : (!cute.layout<"(8,1):(1,0)">) -> !cute.shape<"(8,1)">
  %359:2 = "cute.get_leaves"(%358) : (!cute.shape<"(8,1)">) -> (!cute.shape<"8">, !cute.shape<"1">)
  %360 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %361 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %362 = "cute.right_inverse"(%361) : (!cute.layout<"(8,1):(1,0)">) -> !cute.layout<"8:1">
  %363 = "cute.composition"(%360, %362) : (!cute.layout<"(8):(1)">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %364 = "cute.coalesce"(%363) : (!cute.layout<"8:1">) -> !cute.layout<"8:1">
  %365 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %366 = "cute.get_leaves"(%365) : (!cute.shape<"8">) -> !cute.shape<"8">
  %367 = "cute.get_stride"(%364) : (!cute.layout<"8:1">) -> !cute.stride<"1">
  %368 = "cute.get_leaves"(%367) : (!cute.stride<"1">) -> !cute.stride<"1">
  %369 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %370 = "cute.get_leaves"(%369) : (!cute.shape<"8">) -> !cute.shape<"8">
  %371 = "cute.get_shape"(%364) : (!cute.layout<"8:1">) -> !cute.shape<"8">
  %372 = "cute.get_leaves"(%371) : (!cute.shape<"8">) -> !cute.shape<"8">
  %373 = "cute.composition"(%362, %364) : (!cute.layout<"8:1">, !cute.layout<"8:1">) -> !cute.layout<"8:1">
  %374 = "cute.size"(%373) <{mode = array<i32>}> : (!cute.layout<"8:1">) -> !cute.int_tuple<"8">
  %375 = "cute.get_leaves"(%374) : (!cute.int_tuple<"8">) -> !cute.int_tuple<"8">
  %376 = "cute.get_layout"(%310) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">) -> !cute.layout<"(8):(1)">
  %377 = "cute.get_layout"(%351) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.layout<"(8,1):(1,0)">
  %378 = "cute.logical_divide"(%310, %373) : (!cute.memref<bf16, rmem, align<16>, "(8):(1)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %379 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %380 = "cute.get_iter"(%378) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %381 = "cute.logical_divide"(%351, %373) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %382 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %383 = "cute.get_iter"(%381) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %384 = "cute.make_shape"() : () -> !cute.shape<"8">
  %385 = "cute.make_layout"(%384) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %386 = "cute.logical_divide"(%378, %385) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">
  %387 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %388 = "cute.get_iter"(%386) : (!cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, rmem, align<16>>
  %389 = "cute.make_shape"() : () -> !cute.shape<"8">
  %390 = "cute.make_layout"(%389) <{operandSegmentSizes = array<i32: 1, 0>}> : (!cute.shape<"8">) -> !cute.layout<"8:1">
  %391 = "cute.logical_divide"(%381, %390) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">, !cute.layout<"8:1">) -> !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">
  %392 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %393 = "cute.get_iter"(%391) : (!cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> !cute.ptr<bf16, smem, align<16>>
  %394 = "cute.atom"() : () -> !cute_nvgpu.atom.universal_copy<bf16, 128 b>
  "cute.copy"(%394, %386, %391) : (!cute_nvgpu.atom.universal_copy<bf16, 128 b>, !cute.memref<bf16, rmem, align<16>, "(8,1):(1,0)">, !cute.memref<bf16, smem, align<16>, "(8,1):(1,0)">) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:45:21,653:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:45:21,653:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,653:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,655:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <cutlass.cute.core._Tensor object at 0x791b405cf650>, <cutlass.cute.core._Tensor object at 0x791b405cca10>, Int32(ArithValue(%259 = "scf.if"(%258) ({
  %467 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  %468 = "cute.memref.load"(%arg5, %467) : (!cute.memref<i64, gmem, "(?):(1)">, !cute.coord<"?">) -> i64
  %469 = "arith.trunci"(%468) : (i64) -> i32
  "scf.yield"(%469) : (i32) -> ()
}, {
  "scf.yield"(%257) : (i32) -> ()
}) : (i1) -> i32))]] yield_args [[<cutlass.cute.core._Tensor object at 0x791b40542690>, 0.0]]
2025-09-04 15:45:21,656:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:45:21,656:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,657:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:<class 'float'>] 0.0
2025-09-04 15:45:21,657:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,657:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:45:21,658:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:45:21,658:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:45:21,659:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:45:21,659:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,659:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:45:21,659:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,659:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: 0.0
2025-09-04 15:45:21,659:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,660:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
[%437:2 = "scf.if"(%421) ({
^bb0:
}, {
^bb0:
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:45:21,660:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:45:21,660:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x791b42d16530>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:45:21,661:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x791b42d16530>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:45:21,661:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,661:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:45:21,661:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:45:21,661:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:45:21,661:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,661:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,662:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:45:21,662:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,663:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:45:21,663:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,663:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:45:21,663:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,663:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:45:21,664:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:45:21,664:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%463 = "cute.make_view"(%461, %462) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:45:21,665:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%467 = "arith.extf"(%466) : (bf16) -> f32)
2025-09-04 15:45:21,666:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,666:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:45:21,666:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,666:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:45:21,666:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,666:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:45:21,666:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x791b42d16530>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:45:21,667:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x791b42d16530>, ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)]
2025-09-04 15:45:21,667:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,667:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:45:21,667:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:45:21,667:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:45:21,667:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,667:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,668:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:45:21,668:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,668:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (2)
2025-09-04 15:45:21,668:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [0]: will-unpacked: [type:<class 'cutlass.cute.core._Tensor'>] tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,668:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:576 [unpack_to_irvalue]: [1]: will-unpacked: [type:Float32] ?
2025-09-04 15:45:21,668:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,668:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [0]: unpacked values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:45:21,669:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:617 [unpack_to_irvalue]: [1]: unpacked values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:45:21,669:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [0]: unpacked ir_values: Value(%141 = "cute.make_view"(%139, %140) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">)
2025-09-04 15:45:21,670:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:619 [unpack_to_irvalue]: [1]: unpacked ir_values: ArithValue(%429 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32)
2025-09-04 15:45:21,670:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,670:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:621 [unpack_to_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:45:21,670:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [0]: initial-class-types: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,671:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:623 [unpack_to_irvalue]: [1]: initial-class-types: ?
2025-09-04 15:45:21,671:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,671:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
[%437:2 = "scf.if"(%421) ({
  %460 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %461 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %462 = "cute.get_shape"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %463:2 = "cute.get_leaves"(%462) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %464 = "cute.to_int_tuple"(%463#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %465 = "cute.get_scalars"(%464) : (!cute.int_tuple<"?">) -> i32
  %466 = "cute.get_stride"(%461) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %467:2 = "cute.get_leaves"(%466) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %468 = "arith.extsi"(%232) : (i32) -> i64
  %469 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %470 = "cute.get_stride"(%469) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %471:2 = "cute.get_leaves"(%470) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %472 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %473 = "arith.muli"(%468, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %474 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %475 = "arith.addi"(%473, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %476 = "arith.addi"(%475, %474) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %478 = "arith.muli"(%476, %472) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %479 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %480 = "arith.floordivsi"(%478, %479) : (i64, i64) -> i64
  %481 = "arith.addi"(%477, %480) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %482 = "cute.assume"(%481) : (i64) -> !cute.i64<divby 16>
  %483 = "cute.inttoptr"(%482) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %484 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %485 = "cute.make_view"(%483, %484) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %486 = "cute.get_iter"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %487 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %488 = "cute.memref.load"(%485, %487) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %489 = "arith.extf"(%488) : (bf16) -> f32
  %490 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %491 = "cute.get_shape"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %492:2 = "cute.get_leaves"(%491) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %493 = "cute.to_int_tuple"(%492#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %494 = "cute.get_scalars"(%493) : (!cute.int_tuple<"?">) -> i32
  %495 = "cute.get_stride"(%490) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %496:2 = "cute.get_leaves"(%495) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %497 = "cute.get_layout"(%485) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %498 = "cute.get_shape"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %499:2 = "cute.get_leaves"(%498) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %500 = "cute.to_int_tuple"(%499#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %501 = "cute.get_scalars"(%500) : (!cute.int_tuple<"?">) -> i32
  %502 = "cute.get_stride"(%497) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %503:2 = "cute.get_leaves"(%502) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%485, %489) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %438 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %439 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %440 = "cute.get_shape"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %441:2 = "cute.get_leaves"(%440) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %442 = "cute.to_int_tuple"(%441#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %443 = "cute.get_scalars"(%442) : (!cute.int_tuple<"?">) -> i32
  %444 = "cute.get_stride"(%439) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %445:2 = "cute.get_leaves"(%444) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %446 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %447 = "cute.get_shape"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %448:2 = "cute.get_leaves"(%447) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %449 = "cute.to_int_tuple"(%448#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %450 = "cute.get_scalars"(%449) : (!cute.int_tuple<"?">) -> i32
  %451 = "cute.get_stride"(%446) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %452:2 = "cute.get_leaves"(%451) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %453 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %454 = "cute.get_shape"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %455:2 = "cute.get_leaves"(%454) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %456 = "cute.to_int_tuple"(%455#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %457 = "cute.get_scalars"(%456) : (!cute.int_tuple<"?">) -> i32
  %458 = "cute.get_stride"(%453) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %459:2 = "cute.get_leaves"(%458) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32)]
2025-09-04 15:45:21,672:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (2)
2025-09-04 15:45:21,672:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [0]: will-packed: [<cutlass.cute.core._Tensor object at 0x791b405424b0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:45:21,673:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:528 [pack_from_irvalue]: [1]: will-packed: [<cutlass.cute.core._Tensor object at 0x791b405424b0>, ArithValue(%437:2 = "scf.if"(%421) ({
  %461 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %462 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %463 = "cute.get_shape"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %464:2 = "cute.get_leaves"(%463) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %465 = "cute.to_int_tuple"(%464#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %466 = "cute.get_scalars"(%465) : (!cute.int_tuple<"?">) -> i32
  %467 = "cute.get_stride"(%462) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %468:2 = "cute.get_leaves"(%467) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %469 = "arith.extsi"(%232) : (i32) -> i64
  %470 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %471 = "cute.get_stride"(%470) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %472:2 = "cute.get_leaves"(%471) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %473 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %474 = "arith.muli"(%469, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %475 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %476 = "arith.addi"(%474, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %477 = "arith.addi"(%476, %475) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %478 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %479 = "arith.muli"(%477, %473) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %480 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %481 = "arith.floordivsi"(%479, %480) : (i64, i64) -> i64
  %482 = "arith.addi"(%478, %481) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %483 = "cute.assume"(%482) : (i64) -> !cute.i64<divby 16>
  %484 = "cute.inttoptr"(%483) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %485 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %486 = "cute.make_view"(%484, %485) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %487 = "cute.get_iter"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %488 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %489 = "cute.memref.load"(%486, %488) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %490 = "arith.extf"(%489) : (bf16) -> f32
  %491 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %492 = "cute.get_shape"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %493:2 = "cute.get_leaves"(%492) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %494 = "cute.to_int_tuple"(%493#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %495 = "cute.get_scalars"(%494) : (!cute.int_tuple<"?">) -> i32
  %496 = "cute.get_stride"(%491) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %497:2 = "cute.get_leaves"(%496) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %498 = "cute.get_layout"(%486) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %499 = "cute.get_shape"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %500:2 = "cute.get_leaves"(%499) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %501 = "cute.to_int_tuple"(%500#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %502 = "cute.get_scalars"(%501) : (!cute.int_tuple<"?">) -> i32
  %503 = "cute.get_stride"(%498) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %504:2 = "cute.get_leaves"(%503) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%486, %490) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %439 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %440 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %441 = "cute.get_shape"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %442:2 = "cute.get_leaves"(%441) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %443 = "cute.to_int_tuple"(%442#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %444 = "cute.get_scalars"(%443) : (!cute.int_tuple<"?">) -> i32
  %445 = "cute.get_stride"(%440) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %446:2 = "cute.get_leaves"(%445) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %447 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %448 = "cute.get_shape"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %449:2 = "cute.get_leaves"(%448) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %450 = "cute.to_int_tuple"(%449#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %451 = "cute.get_scalars"(%450) : (!cute.int_tuple<"?">) -> i32
  %452 = "cute.get_stride"(%447) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %453:2 = "cute.get_leaves"(%452) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %454 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %455 = "cute.get_shape"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %456:2 = "cute.get_leaves"(%455) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %457 = "cute.to_int_tuple"(%456#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %458 = "cute.get_scalars"(%457) : (!cute.int_tuple<"?">) -> i32
  %459 = "cute.get_stride"(%454) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %460:2 = "cute.get_leaves"(%459) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))]
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [0]: indices: (0, 1)
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:530 [pack_from_irvalue]: [1]: indices: (1, 1)
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [0]: obj-types: <class 'cutlass.cute.core._Tensor'>
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:532 [pack_from_irvalue]: [1]: obj-types: <class 'float'>
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [0]: packed: tensor<ptr<bf16, gmem, align<16>> o (?,16):(16,1)>
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:557 [pack_from_irvalue]: [1]: packed: ?
2025-09-04 15:45:21,674:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,674:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [online_softmax_reduce]
2025-09-04 15:45:21,676:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [online_softmax_reduce]
2025-09-04 15:45:21,683:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [online_softmax_reduce]
2025-09-04 15:45:21,683:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [warp_reduce]
2025-09-04 15:45:21,684:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [warp_reduce]
2025-09-04 15:45:21,686:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:45:21,688:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1271 [run_preprocessor]: Started preprocessing [exp2f]
2025-09-04 15:45:21,688:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:266 [transform_function]: ASTPreprocessor Transforming function [exp2f]
2025-09-04 15:45:21,692:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [exp2f]
2025-09-04 15:45:21,692:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:204 [loop_selector]: start [0] stop [8] step [1] used_args [[tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x791b405baf90>]] iter_args [[]] unroll [-1] unroll_full [True] pipelining [None]
2025-09-04 15:45:21,692:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:133 [for_execute]: start [0] stop [8] step [1]
2025-09-04 15:45:21,692:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,692:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,692:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,693:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:263 [create_for_op]: Unroll attribute: #llvm.loop_annotation<unroll = <full = true>>
2025-09-04 15:45:21,693:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:275 [create_for_op]: Pipelining attribute: None
2025-09-04 15:45:21,693:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:277 [create_for_op]: Creating scf.ForOp 
		start=ArithValue(%257 = "arith.constant"() <{value = 0 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		stop=ArithValue(%497 = "arith.constant"() <{value = 8 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
		step=ArithValue(%498 = "arith.constant"() <{value = 1 : i32}> : () -> i32): type : <class 'cutlass.base_dsl._mlir_helpers.arith.ArithValue'>
2025-09-04 15:45:21,695:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:45:21,696:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:321 [for_body_builder]: For body builder: ? block_args: [ArithValue(<block argument> of type 'i32' at index: 0)] used_args: [tensor_value<vector<8xf32> o ((8, 1), 1, 1)>, <cutlass.cute.core._Tensor object at 0x791b405baf90>]
2025-09-04 15:45:21,696:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,696:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,696:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,696:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.for 
["scf.for"(%257, %497, %498) ({
^bb0(%arg8: i32):
  %499 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  %500 = "cute.memref.load"(%479, %499) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">) -> f32
  %501 = "llvm.inline_asm"(%500) <{asm_dialect = 0 : i64, asm_string = "ex2.approx.ftz.f32 $0, $1;", constraints = "=f,f", has_side_effects}> : (f32) -> f32
  %502 = "cute.make_coord"(%arg8) : (i32) -> !cute.coord<"?">
  "cute.memref.store"(%479, %502, %501) : (!cute.memref<f32, rmem, align<32>, "((8,1),1,1):((1,0),0,0)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}) {loop_annotation = #llvm.loop_annotation<unroll = <full = true>>} : (i32, i32, i32) -> ()]
2025-09-04 15:45:21,697:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:45:21,697:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,697:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,700:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_preprocessor.py:214 [exec]: ASTPreprocessor Executing transformed code for function [warp_reduce]
2025-09-04 15:45:21,704:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/ast_helpers.py:245 [if_selector]: pred [?] used_args [[<cutlass.cute.core._Tensor object at 0x791b405cf650>, Int32(IntValue(%232 = "cute.get_scalars"(%231#0) : (!cute.int_tuple<"?">) -> i32)), <__main__.CrossEntropy object at 0x791b40542210>, Float32(ArithValue(%437:2 = "scf.if"(%421) ({
  %631 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %632 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %633 = "cute.get_shape"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %634:2 = "cute.get_leaves"(%633) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %635 = "cute.to_int_tuple"(%634#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %636 = "cute.get_scalars"(%635) : (!cute.int_tuple<"?">) -> i32
  %637 = "cute.get_stride"(%632) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %638:2 = "cute.get_leaves"(%637) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %639 = "arith.extsi"(%232) : (i32) -> i64
  %640 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %641 = "cute.get_stride"(%640) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %642:2 = "cute.get_leaves"(%641) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %643 = "arith.constant"() <{value = 16 : i64}> : () -> i64
  %644 = "arith.muli"(%639, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %645 = "arith.constant"() <{value = 0 : i64}> : () -> i64
  %646 = "arith.addi"(%644, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %647 = "arith.addi"(%646, %645) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %648 = "cute.ptrtoint"(%79) : (!cute.ptr<bf16, gmem, align<16>>) -> i64
  %649 = "arith.muli"(%647, %643) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %650 = "arith.constant"() <{value = 8 : i64}> : () -> i64
  %651 = "arith.floordivsi"(%649, %650) : (i64, i64) -> i64
  %652 = "arith.addi"(%648, %651) <{overflowFlags = #arith.overflow<none>}> : (i64, i64) -> i64
  %653 = "cute.assume"(%652) : (i64) -> !cute.i64<divby 16>
  %654 = "cute.inttoptr"(%653) : (!cute.i64<divby 16>) -> !cute.ptr<bf16, gmem, align<16>>
  %655 = "cute.get_layout"(%arg4) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %656 = "cute.make_view"(%654, %655) : (!cute.ptr<bf16, gmem, align<16>>, !cute.layout<"(?,16):(16,1)">) -> !cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">
  %657 = "cute.get_iter"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %658 = "cute.make_coord"(%259) : (i32) -> !cute.coord<"(0,?)">
  %659 = "cute.memref.load"(%656, %658) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, !cute.coord<"(0,?)">) -> bf16
  %660 = "arith.extf"(%659) : (bf16) -> f32
  %661 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %662 = "cute.get_shape"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %663:2 = "cute.get_leaves"(%662) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %664 = "cute.to_int_tuple"(%663#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %665 = "cute.get_scalars"(%664) : (!cute.int_tuple<"?">) -> i32
  %666 = "cute.get_stride"(%661) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %667:2 = "cute.get_leaves"(%666) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %668 = "cute.get_layout"(%656) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %669 = "cute.get_shape"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %670:2 = "cute.get_leaves"(%669) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %671 = "cute.to_int_tuple"(%670#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %672 = "cute.get_scalars"(%671) : (!cute.int_tuple<"?">) -> i32
  %673 = "cute.get_stride"(%668) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %674:2 = "cute.get_leaves"(%673) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%656, %660) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}, {
  %609 = "cute.get_iter"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.ptr<bf16, gmem, align<16>>
  %610 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %611 = "cute.get_shape"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %612:2 = "cute.get_leaves"(%611) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %613 = "cute.to_int_tuple"(%612#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %614 = "cute.get_scalars"(%613) : (!cute.int_tuple<"?">) -> i32
  %615 = "cute.get_stride"(%610) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %616:2 = "cute.get_leaves"(%615) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %617 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %618 = "cute.get_shape"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %619:2 = "cute.get_leaves"(%618) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %620 = "cute.to_int_tuple"(%619#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %621 = "cute.get_scalars"(%620) : (!cute.int_tuple<"?">) -> i32
  %622 = "cute.get_stride"(%617) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %623:2 = "cute.get_leaves"(%622) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  %624 = "cute.get_layout"(%141) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">) -> !cute.layout<"(?,16):(16,1)">
  %625 = "cute.get_shape"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.shape<"(?,16)">
  %626:2 = "cute.get_leaves"(%625) : (!cute.shape<"(?,16)">) -> (!cute.shape<"?">, !cute.shape<"16">)
  %627 = "cute.to_int_tuple"(%626#0) : (!cute.shape<"?">) -> !cute.int_tuple<"?">
  %628 = "cute.get_scalars"(%627) : (!cute.int_tuple<"?">) -> i32
  %629 = "cute.get_stride"(%624) : (!cute.layout<"(?,16):(16,1)">) -> !cute.stride<"(16,1)">
  %630:2 = "cute.get_leaves"(%629) : (!cute.stride<"(16,1)">) -> (!cute.stride<"16">, !cute.stride<"1">)
  "scf.yield"(%141, %429) : (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32) -> ()
}) : (i1) -> (!cute.memref<bf16, gmem, align<16>, "(?,16):(16,1)">, f32))), <cutlass.cute.core._Tensor object at 0x791b405cc260>, None]] yield_args [[]]
2025-09-04 15:45:21,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,706:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:127 [scf_execute_dynamic]: Generated scf.if 
["scf.if"(%604) ({
^bb0:
}, {
}) : (i1) -> ()]
2025-09-04 15:45:21,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:45:21,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,707:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,708:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:574 [unpack_to_irvalue]: ===--- Values UNPack (0)
2025-09-04 15:45:21,708:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:615 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,708:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:624 [unpack_to_irvalue]: ------------------ 
2025-09-04 15:45:21,708:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass_ast_decorators.py:202 [scf_execute_dynamic]: Completed scf.if 
["scf.if"(%604) ({
  %605 = "llvm.inline_asm"(%521) <{asm_dialect = 0 : i64, asm_string = "lg2.approx.ftz.f32 $0, $1;", constraints = "=f,f"}> : (f32) -> f32
  %606 = "arith.constant"() <{value = 0.693147182 : f32}> : () -> f32
  %607 = "arith.mulf"(%605, %606) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %608 = "arith.addf"(%469, %607) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %609 = "arith.subf"(%608, %437#1) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
  %610 = "cute.make_coord"(%231#0) : (!cute.int_tuple<"?">) -> !cute.coord<"?">
  "cute.memref.store"(%arg6, %610, %609) : (!cute.memref<f32, gmem, "(?):(1)">, !cute.coord<"?">, f32) -> ()
  "scf.yield"() : () -> ()
}, {
}) : (i1) -> ()]
2025-09-04 15:45:21,709:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:526 [pack_from_irvalue]: ===--- Values Pack (0)
2025-09-04 15:45:21,709:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:555 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,709:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/cutlass_dsl/cutlass.py:558 [pack_from_irvalue]: ------------------ 
2025-09-04 15:45:21,710:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1703 [kernel_wrapper]: Kernel result: KernelReturns(kernel_func_ret=None, launch_op_ret=<cutlass._mlir._mlir_libs._mlir.ir.OpResult object at 0x791b405e2f30>), kernel name: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:45:21,715:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:460 [jit_runner]: jit_runner
2025-09-04 15:45:21,824:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1051 [get_module_hash]: Bytecode=[]
2025-09-04 15:45:21,825:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1052 [get_module_hash]: Version=[b04498592e3697b362fdd476b243e580ca4dd1d86abb8910f56663ecc58ebc0f]
2025-09-04 15:45:21,825:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1053 [get_module_hash]: Function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] Computed module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:45:21,830:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /home/jeromeku/cutlass/quack-sandbox/cute_dsl_cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0.mlir
2025-09-04 15:45:21,831:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1014 [preprocess_pipeline]: Using pipeline = builtin.module(cute-to-nvvm{cubin-format=bin opt-level=3 enable-device-assertions=false toolkitPath=/usr cubin-chip=sm_90a })
2025-09-04 15:45:21,831:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/dsl.py:1158 [compile_and_cache]: JIT cache miss function=[cutlass___call_____main__CrossEntropy_object_at__Tensorgmemo16161_Tensorgmemo1_Tensorgmemo1_None_CUstream0x0] module_hash=[9e1c011f3590c14fdb6ec7027ecddd6ec74eca69d9cd11a894a5526f68e3fe91]
2025-09-04 15:45:21,880:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/jit_executor.py:268 [update_jit_cuda_modules]: Loading CUDA module for symbol: kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:45:21,884:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:293 [load_cubin_module_data]: cuModuleLoadData 768467504
2025-09-04 15:45:21,885:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:304 [get_kernel_function]: cuModuleGetFunction <CUmodule 0x2dcf1f60> kernel_cutlass_kernel___main__CrossEntropy_object_at__tensorptrbf16gmemalign16o16161_tensorptri64gmemo1_tensorptrf32gmemo1_None_16_64_0
2025-09-04 15:45:21,885:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/runtime/cuda.py:308 [get_kernel_function]: <CUfunction 0x2dc268c0> <-- cuModuleGetFunction
2025-09-04 15:45:21,885:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/compiler.py:215 [__init__]: `cute.compile` CompileOptions: options=
2025-09-04 15:45:21,888:CUTE_DSL:INFO::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:141 [dump_cache_to_path]: JIT cache : dumping [CUTE_DSL] items=[1]
2025-09-04 15:45:21,890:CUTE_DSL:DEBUG::/home/jeromeku/cutlass/.cutlass-env/lib/python3.12/site-packages/nvidia_cutlass_dsl/python_packages/cutlass/base_dsl/cache_helpers.py:103 [save_ir]: Generated IR saved into /tmp/jeromeku/cutlass_python_cache/cute_dsl_6b81e4b30d0daf259ff9c705ec49b21b41ea4324bdd82818cfca1cac55c435c2.mlir
